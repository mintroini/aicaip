["function _3829f66216a162a2be5e942fbef5f879444d811d(){};",250704,36,91,1048485,1048576,112869,"@class Ext.Decorator\n * @extends Ext.Component\n *\n * In a few words, a Decorator is a Component that wraps around another Component. A typical example of a Decorator is a\n * {@link Ext.field.Field Field}. A form field is nothing more than a decorator around another component, and gives the\n * component a label, as well as extra styling to make it look good in a form.\n *\n * A Decorator can be thought of as a lightweight Container that has only one child item, and no layout overhead.\n * The look and feel of decorators can be styled purely in CSS.\n *\n * Another powerful feature that Decorator provides is config proxying. For example: all config items of a\n * {@link Ext.slider.Slider Slider} also exist in a {@link Ext.field.Slider Slider Field} for API convenience.\n * The {@link Ext.field.Slider Slider Field} simply proxies all corresponding getters and setters\n * to the actual {@link Ext.slider.Slider Slider} instance. Writing out all the setters and getters to do that is a tedious task\n * and a waste of code space. Instead, when you sub-class Ext.Decorator, all you need to do is to specify those config items\n * that you want to proxy to the Component using a special 'proxyConfig' class property. Here's how it may look like\n * in a Slider Field class:\n *\n *     Ext.define('My.field.Sli",1484696,32,"Decorator",1552160,42,"component: {\n *                 xtype: 'slider'",1621920,34,"\n *         proxyConfig: {\n *             minValue: 0,\n *             maxValue: 100,\n *             increment: 1\n *         }\n *",255755,36,"Once `My.field.Slider` class is created, it will have all setters and getters methods for all items listed in `proxyConfig`\n * automatically generated. These methods all proxy to the same method names that exist within the Component instance.\n */\nExt.define('Ext.Decorato",1788221,40,"isDecorato",920192,53,"Object} component The config object to factory the Component that this Decorator wraps around\n         */\n        component: {}",1490240,32,"generateProxySetter",1563247,47,"value) {\n                var component = this.getComponent();\n                component[name].call(component, value);",528656,45,"        },\n        generateProxyGetter",1563247,71,"component = this.getComponent();\n                return component[name].call(component",1030640,39,547693,33,549083,48,"proxy",547775,89,"proxyConfig = members.proxyConfig",549219,37,";\n\n        members",547974,41,"proxyConfig) : proxyConfig;\n\n        var name, nameMap, setName, getName;\n\n        for (name in proxyConfig) {\n            if (proxy",548672,90,182981,37,";",183019,38,";\n\n                members[setName] = this.generateProxySetter(setName);\n                members[getName] = this.generateProxyGetter(ge",366141,32,"    },\n\n    // @private\n    applyComponent",782608,36,1841464,33,1183216,37,"Component: function(newComponent, oldComponent) {\n        if (oldComponent) {\n    ",1047901,33,"oldComponent",1048502,35,"    oldComponent",1048541,37,"oldComponent, false],\n                    'doUnsetComponent', this, { args: [oldComponent]",2066607,59,"doUnsetComponent(oldCompon",1881727,39,"if (newComponent) {\n    ",1047901,33,"newComponent",1047938,34,"    newComponent",1048541,37,"newComponent, true],\n                    'doSetComponent', this, { args: [newComponent]",2066607,59,"doSetComponent(newComponent",1093888,55,"doUns",1057274,47,"component",861053,34,"component.setLayoutSizeFlags(0",1032191,33,"dom.removeChild(component.renderElement.dom);",1093904,39,"doS",1057274,47,"component",861053,34,"component.setLayoutSizeFlags(this.getSizeFlags()",1032191,33,"dom.appendChild(component.renderElement.dom);",1093904,39,787920,46,"component",2001134,41,") {\n            component = this.getComponent();\n",1777609,46,"component",1054289,110,"/ @private\n    s",775532,46,996565,36,"getComponent().setDisabled(disabled",974175,45,"Ext.destroy(this.getComponent()",835821,35,1012784,228,1161660,11690,"@aside video tabs-toolbars\n *\n * {@link Ext.Toolbar}s are most commonly used as docked items as within a {@link Ext.Container}. They can be docked either `top` or `bottom` using the {@link #docked} configuration.\n *\n * They allow you to insert items (normally {@link Ext.Button buttons}) and also add a {@link #title}.",1175692,35,"{@link Ext.Toolbar} is {@link Ext.Button}.\n *\n * You can alternatively use {@link Ext.TitleBar} if you want the title to automatically adjust the size of its items",1173841,39,1852175,41,877552,62,1079088,51,1078309,60,"\n * ",1171950,36,534381,34,534419,39,863744,53,2094369,39,"defaults: {\n *",1170666,39,"*                     margin: '10 10 0 10'",919611,42,1069276,32,"{\n *",2102609,32,"Toggle docked',\n * ",1171249,47,"* ",1171361,32,"toolbar = Ext.ComponentQuery.query('toolbar')[0],",1344864,36,"newDocked = (toolbar.getDocked() === 'top') ? 'bottom' : 'top'",1432526,32,"    toolbar.setDocked(newDocked);\n *    ",1345274,42,"    },",1626823,53,"text: 'Toggle UI',\n * ",1171249,47,"* ",1171361,32,"toolbar = Ext.ComponentQuery.query('toolbar')[0],",1344864,36,"newUi = (toolbar.getUi() === 'light') ? 'dark' : 'light'",1432526,32,"    toolbar.setUi(newUi);\n *    ",1345274,42,"    },",1626823,53,"text: 'Change title',\n * ",1171249,47,"* ",1171361,32,"toolbar = Ext.ComponentQuery.query('toolbar')[0],",1344864,36,"titles = ['My Toolbar', 'Ext.Toolbar', 'Configurations are awesome!', 'Beautiful.']",1597040,34,"   //internally, the title configuration gets converted into a {@link Ext.Title} component",1597040,34,"   //so you must get the title configuration of that component",1344864,36,"title = toolbar.getTitle().getTitle(),",1344864,36,"newTitle = titles[titles.indexOf(title) + 1] || title",1432522,36,"    toolbar.setTitle(newTitle);\n *    ",1345274,42,"   ",1082208,70," ## Notes\n *\n",737552,131,"*\n *     <!doctype html>\n *\n",737743,60,"*\n *     <!doctype html>\n *     <html>\n *         <head>\n",737900,52,"*             ...\n *\n */\nExt.define('Ext.Toolbar",2100064,38,"xtype : 'toolbar",999936,41,"\n",847387,42,"\n",865030,39,1175946,74,1807695,82,1176094,38," {String} ui\n         * The ui for this {@link Ext.Toolbar}. Either 'light' or 'dark'. You can create more UIs by using using the CSS Mixin {@link #sencha-toolbar-ui",729775,43,1176365,48,"/Ext.Title",1176413,137,1176717,154,"docked\n         * The docked position for this {@link Ext.Toolbar}.\n         * If you specify `left` or `right`, the {@link #layout} configuration will automatically change to a `vbox`. It's also\n         * recommended to adjust the {@link #width} of the toolbar if you do thi",1638432,36,1162512,39,736108,39,1176911,109,2043295,790,1457215,33,"If you set the {@link #docked} configuration to `left` or `right`, the default layout will change from the\n         * `hbox` to a `vbox`",739438,54,"layout: {\n",1022685,35,"   align: 'center'\n        }\n    }",1177883,35,547232,40,1652160,32,"if (config.docked == \"left\" || config.docked == \"right\") {\n            config.layout = {\n    ",1170425,38,"    align: 'stretch'",936304,35,1173305,32,",\n\n    // @private\n    applyTitle: function(title) {\n        if (typeof title == 'string') {\n            title = {\n                title: title,\n                centered : Ext.theme.is.Tizen ? false : true",936304,35,"return Ext.factory(title, Ext.Title, this.getTitle()",1183216,61,", oldTitle) {\n        if (newTitle) {\n            this.add(newTitle);\n        }\n\n        if (oldTitle) {\n            oldTitle",883552,34,"/**\n     * Shows the title, if it exists.\n     */\n    showTitle: function() {\n        var title = this.getTitle();\n\n        if (title) {\n            title",765978,42,"Hides the title, if it exists.\n     */\n    hideTitle: function() {\n        var title = this.getTitle();\n\n        if (title) {\n            title.hide()",361730,34,"Returns an {@link Ext.Title} component.\n     * @member Ext.Toolbar\n     * @method getTitle\n     * @return {Ext.Title}\n     */\n\n    /**\n     * Use this to update",1173540,33,".\n     * @member Ext.Toolbar\n     * @method setTitle\n     * @param {String/Ext.Title} title You can either pass a String, or a config/instance of {@link Ext.Title}.\n     */",716774,60,"field.Input",1082302,34,"    xtype : 'input',\n\n    /**\n     * @event clearicontap\n     * Fires whenever the clear ic",1082439,33,"field.Input} this",1780847,83,"masktap\n     * @preventable doMaskTap\n     * Fires whenever a mask is tapped.\n     * @param {Ext.field.Input} this",1780847,51,892159,33,"focus\n     * @preventable doFocus\n     * Fires whenever the input get focus.",1780847,51,".",749536,33,"lur\n     * @preventable doBlur\n     * Fires whenever the input loses focus.",1780847,51,892159,33,"click\n     * Fires whenever the input is clicked.",1780847,51,892159,33,"keyup\n     * Fires whenever keyup is detected.",1780847,51,892159,33,"paste\n     * Fires whenever paste is detected.",1780847,51,892159,33,"mousedown\n     * Fires whenever the input has a mousedown occur.",1780847,51,1991280,37,"String} tag The el tag.\n     * @private\n     */\n    tag: 'inpu",729296,62,"cls The `className` to be applied to this inpu",1162624,44,"cls: Ext.baseCSSPrefix + 'form-field",1456384,41,"focusCls The CSS class to use when the field receives focu",1638432,44,"focusCls: Ext.baseCSSPrefix + 'field-focus',\n\n        // @private\n        maskCls: Ext.baseCSSPrefix + 'field-mask',\n\n        /**\n ",1810610,33,"useMask\n         * `true` to use a mask on this field, or `auto` to automatically select when you should use it",1646160,32,1811374,34,"Mask",1435103,40,"String} type The type attribute for input fields -- e.g. radio, text, password",1086882,39,"use a `file` input, please use the {@link Ext.field.File} component instead",740976,44,"ype: 'tex",1456848,34,"Boolean} checked `true` if the checkbox should render initially che",1758096,47,"checked: false",1022238,50,838510,44,"baseCls: Ext.baseCSSPrefix + 'field-inpu",1456848,42,"name The field's HTML name attribute.\n         * __Note:__ This property must be set if this field is to be automatically included with\n         * {@link Ext.form.Panel#method-submit form submit()",1857136,44,1454367,42,"Mixed} value A value to initialize this field with",740976,43,"valu",1183984,34,"property {Boolean} `true` if the field currently has focu",1638432,44,"isFocus",1649231,41,"Number} tabIndex The `tabIndex` for this field",1457214,39,"only applies to fields that are rendered, not those which are built via `applyTo",518336,44,"tabIndex",1643280,46,"placeHolder A string value displayed in the input (if supported) when the control is empty",740976,43,"placeHold",1226431,40,"Number} [minValue=undefined] The minimum value that this Number field can accept (defaults to `undefined`, e.g. no minimum",732624,44,"minValu",1183984,39,"Number} [maxValue=undefined] The maximum value that this Number field can accept (defaults to `undefined`, e.g. no maximum",732624,44,"maxValu",1183984,39,"Number} [stepValue=undefined] The amount by which the field is incremented or decremented each time the spinner is tapped.",1102252,35,", which means that the field goes up or down by 1 each time the spinner is tapp",1028046,45,"stepValu",1183984,39,"Number} [maxLength=0] The maximum number of permitted input character",1638432,44,"maxLength",1028096,47,"[autoComplete=undefined]\n         * `true` to set the field's DOM element `autocomplete` attribute to `\"on\"`, `false` to set to `\"off\"`. Defaults to `undefined`, leaving the attribute unse",1162624,44,"autoComplet",1183984,39,"Boolean} [autoCapitalize=undefined]\n         * `true` to set the field's DOM element `autocapitalize` attribute to `\"on\"`, `false` to set to `\"off\"`. Defaults to `undefined`, leaving the attribute unset",729776,42,"autoCapitaliz",1183984,33,"`true` to set the field DOM element `autocorrect` attribute to `\"on\"`, `false` to set to `\"off\"`. Defaults to `undefined`, leaving the attribute unset.\n         * @cfg {Boolean} autoCorrect",729776,42,"autoCorrec",947808,39,"Boolean} [readOnly=undefined]\n         * `true` to set the field DOM element `readonly` attribute to `\"true\"`. Defaults to `undefined`, leaving the attribute unse",1162624,44,"readOnly",1325456,46,"[maxRows=undefined]\n         * Sets the field DOM element `maxRows` attribute. Defaults to `undefined`, leaving the attribute unse",1162624,45,"axRow",1338464,47,"pattern The value for the HTML5 `pattern` attribute.\n         * You can use this to change which keyboard layout will be used",132783,40,"Ux.field.Pattern', {\n         *         extend : 'Ext.field.Text',\n         *         xtype  : 'patternfield'",1651008,32,"config : {\n         *             component : {\n         *                 pattern : '[0-9]*",1023151,46,159632,43,"Even though it extends {@link Ext.field.Text}, it will display the number keyboard",739438,54,"patter",1451968,39,"Boolean} [disabled=false] `true` to disable the field.\n         *\n         * Be aware that conformant with the [HTML specification](http://www.w3.org/TR/html401/interact/forms.html),\n         * disabled Fields will not be {@link Ext.form.Panel#method-submit submitted",1857136,36,921562,37,"startValue\n         * The value that the Field had at the time it was last focused. This is the value that is passed\n         * to the {@link Ext.field.Text#change} event which is fired if the value has been changed when the Field is blurred.\n         *\n         * __This will be `undefined` until the Field has been visited.__ Compare {@link #originalValue",1857136,44,"startValue",1861280,48,"fastFocus\n         *\n         * Enable Fast Input Focusing on iOS, using this workaround will stop some touchstart events in order to prevent\n         * delayed focus issues",739438,54,"fastFocus: true\n    },\n\n    /**\n     * @cfg {String/Number} originalValue The original value when the input is rendered.\n     * @private\n     */\n\n    // @private",1162905,43,"items =",2100368,33,"reference: 'input',\n                tag: this.tag",2096576,46,"reference: 'mask',\n                classList: [this.config.maskCls]",2096576,46,"reference: 'clearIcon',\n                cls: 'x-clear-icon",996991,43,"items",1952583,52,1791294,34,");\n\n        me.input.on({\n            scope: me,\n\n            keyup: 'onKeyUp',\n            keydown: 'onKeyDown',\n            focus: 'onFocus',\n            blur: 'onBlur',\n            input: 'onInput',\n            paste: 'onPaste',\n            tap: 'onInputTap'\n        });\n\n\n        // Stock android has a delayed mousedown event that is dispatched\n        // this prevents the mousedown from focus's an input when not intended (click a message box button or picker button that lays over an input)\n        // we then force focus on touchen",1972985,41,") {\n            me.input.dom.addEventListener(\"mousedown\"",427856,32,"if(document.activeElement != e.target) {\n        ",2080816,40,"        }\n            } );\n            me.input.dom.addEventListener(\"touchend\", function() { me.focus(); });\n        }\n\n        me.mask.on({\n",1039851,35,"tap: 'onMaskTap'\n        });\n\n        if (me.clearIcon) {\n            me.clearIcon.on({\n                tap: 'onClearIconTap',\n                touchstart: 'onClearIconPress',\n                touchend: 'onClearIconRelease",1895147,45,"        }\n\n        // Hack for IE10. Seems like keyup event is not fired for 'enter' keyboard button, so we use keypress event instead to handle enter.\n        if(Ext.browser.is.ie && Ext.browser.version.major >=10){\n            me.input.on({\n",1039847,43,"keypress: 'onKeyPress'",1012752,32,",\n\n    updateFastFocus: function(newValue) {\n       // This is used to prevent 300ms delayed focus bug on iOS\n       if (newValue) {\n           if (this.getFastFocus() && Ext.os.is.iOS) {\n               this.input.on({\n   ",779407,45,"   touchstart: \"onTouchStart\"\n               });\n           }\n       } else {\n           this.input.un({\n",779408,43,"touchstart: \"onTouchStart\"\n           });\n",114944,32,"Manual Max Length processing is required for the stock \"Browser\" on Android",954912,33,"Boolean} 'true' if non-chrome browser is detected on Android\n     */\n    useManualMax",1067566,36,"Boolean((Ext.os.is.Android && !Ext.browser.is.Chrome));\n    },\n\n    applyUseMask: function(useMask) {\n        if (useMask === 'auto') {\n            useMask = ",355648,32,"lt('5')",785730,36,"useMask)",1164272,37,"useMask",764422,33,"UseMask: function(newUseMask) {\n        this.mask[newUseMask ? 'show' : 'hide']();\n    },\n\n    updatePattern : function (pattern) {\n        this.updateFieldAttribute('pattern', pattern);\n    },\n\n    /**\n     * Helper method to update a specified attribute on the `fieldEl`, or remove the attribute all together",1280448,36,"FieldAttribute: function(attribute, newValue) {\n        var input = this.input;\n\n        if (!Ext.isEmpty(newValue, true)) {\n            input.dom.setAttribute(attribute, newValu",763360,33,"input.",413310,40,764364,45,"cls} configuration.",764078,32,"(newCls, oldCls) {\n        this.input.addCls(Ext.baseCSSPrefix + 'input-el');\n        this.inpu",764326,34,"},\n\n    /**\n     * Updates the type attribute with",847147,35,1089376,33,1443033,47,"prefix = Ext.baseCSSPrefix + 'input-';\n\n        this.input.replaceCls(prefix + oldType, prefix + newType);\n        this.updateFieldAttribute('type', newType)",1164272,37,"name attribute with the {@link #name",1164771,51,1268588,34,"this.updateFieldAttribute('name', newName",1049488,34,"the field data value.\n     * @return {Mixed} value The field value.",414141,32,") {\n        var input = this.input;\n\n        if (input) {\n            this._value = input.dom.",697835,38,"_value;\n    },\n\n    // @private\n    apply",29967,33,"return (Ext.isEmpty(value)) ? ''",637773,33,"Updates the {@link #value",1164771,51,"Value: function(newValue) {\n        var input = this.input;\n\n        if (input) {\n            input.dom.value = newValue;\n        }\n    },\n\n    setValue: function(newValue) {\n        var oldValue = this._value",991802,33,"applyValue(newValue));\n\n        newValue = this.getValue();\n\n        if (String(newValue) != String(oldValue) && ",774959,32,"this.onChange(this, newValue, oldValu",781343,48,"// @private\n    applyTabIndex: function(tabIndex) {\n        if (tabIndex !== null && typeof tabI",1045428,32,"throw new Error(\"Ext.field.Field: [applyTabIndex] trying to pass a value which is not a number\");\n        }\n        return tabIndex",1164272,37,"tabIndex attribute with the {@link #tabIndex",1164366,50,"TabIndex: function(newTabIndex) {\n        this.updateFieldAttribute('tabIndex', newTabIndex",482630,32,"estAutoFn",640143,35,"[true, 'on'].indexOf(value) !== -1;\n    },\n\n    applyMaxLength: function(maxLength) {\n        if (maxLength !== null && typeof maxLength != 'number'",410300,33,"Ext.field.Text: [applyMaxLength] trying to pass a value which is not a number\");\n        }\n        return maxLength",1164272,37,"`maxlength` attribute with the {@link #maxLength",1164771,52,"axLength: function(newMaxLength) {\n        if (!this.useManualMaxLength()) {\n            this.updateFieldAttribute('maxlength', newMaxLength",111856,36,"Updates the `placeholder` attribute with the {@link #placeHolder",1164771,51,"PlaceHolder: function(newPlaceHolder) {\n        this.updateFieldAttribute('placeholder', newPlaceHolder);\n    },\n\n    // @private\n    applyAutoComplete: function(autoComplete) {\n        return this.testAutoFn(autoComplete)",1164272,37,"`autocomplete` attribute with the {@link #autoComplete",1164771,51,"AutoComplete: function(newAutoComplete) {\n        var value = newAutoComplete ? 'on' : 'off';\n        this.updateFieldAttribute('autocomplete', value);\n    },\n\n    // @private\n    applyAutoCapitalize: function(autoCapitalize) {\n        return this.testAutoFn(autoCapitalize)",1164272,37,"`autocapitalize` attribute with the {@link #autoCapitalize",1164771,51,"AutoCapitalize: function(newAutoCapitalize) {\n        var value = newAutoCapitalize ? 'on' : 'off';\n        this.updateFieldAttribute('autocapitalize', value);\n    },\n\n    // @private\n    applyAutoCorrect: function(autoCorrect) {\n        return this.testAutoFn(autoCorrect)",1164272,37,"`autocorrect` attribute with the {@link #autoCorrect",1164771,51,"AutoCorrect: function(newAutoCorrect) {\n        var value = newAutoCorrect ? 'on' : 'off';\n        this.updateFieldAttribute('autocorrect', value)",1164272,37,"`min` attribute with the {@link #minValue",1164771,52,"inValue: function(newMinValue) {\n        this.updateFieldAttribute('min', newMinValue)",1164272,37,"`max` attribute with the {@link #maxValue",1164771,52,"axValue: function(newMaxValue) {\n        this.updateFieldAttribute('max', newMaxValue)",1164272,37,"`step` attribute with the {@link #stepValu",1164365,51,"StepValue: function(newStepValue) {\n        this.updateFieldAttribute('step', newStepValue",600476,32,"heckedRe: /^(true|1|on)/i,\n\n    /**\n     * Returns the `checked` value of this field\n     * @return {Mixed} value The field value\n     */\n    getChecked: function() {\n        var el = this.input,\n            checked",484486,33,"checked = el.dom.checked;\n            this._checked = checked;\n        }\n\n        return checked;\n    },\n\n    // @private\n    applyChecked: function(checked) {\n        return !!this.checkedRe.test(String(checked));\n    },\n\n    setChecked: function(newChecked) {\n        this.updateChecked(this.applyChecked(newChecked));\n        this._checked = newChecked",1164272,37,"`autocorrect` attribute with the {@link #autoCorrect",1164366,50,"Checked: function(newChecked) {\n        this.input.dom.checked = newChecked",1164272,37,"`readonly` attribute with the {@link #readOnly",1164366,50,"ReadOnly: function(readOnly) {\n        this.updateFieldAttribute('readonly', readOnly ? true : null);\n    },\n\n    // @private\n    applyMaxRows: function(maxRows) {\n        if (maxRows !== null && typeof maxRows !== 'number'",410300,33,"Ext.field.Input: [applyMaxRows] trying to pass a value which is not a numb",566791,32,"maxRows;\n    },\n\n    updateMaxRows: function(newRows) {\n        this.updateFieldAttribute('rows', newRows",775514,64,1168093,36,"Ext.browser.is.Safari && !",1965648,41,"input.dom.tabIndex = (disabled) ? -1 : 0;\n        }\n\n        this.input.dom.disabled = (Ext.browser.is.Safari && !Ext.os.is.BlackBerry) ? false : disabled;\n\n        if (!disabled) {\n            this.blur",765983,45,"`true` if the value of this Field has been changed from its original value.\n     * Will return `false` if the field is disabled or has not been rendered yet",1658830,41,"Dirt",544175,33,1094445,62,"return String(this.getValue()) !== String(this.originalValue);\n    },\n\n    /**\n     * Resets the current field value to the original value.\n     */",694419,38,"setValue(this.originalValue",1837406,33,"Input",1906960,32,"fireAction('inputtap', [this, e], 'doInputTap')",2040028,32,"InputTap",1094065,32,"me",1094444,63,"// Fast focus switching\n        if (this.getFastFocus() && Ext.os.is.iOS) {\n            me.focus();",1093904,41,"Mask",1906960,32,"fireAction('masktap', [this, e], 'doMaskTap')",2040028,32,"MaskTap",1094065,32,"me",1094444,63,"me.focus",1183215,32,"showMask",544176,32,"getUseMask()) {\n            this.mask.setStyle('display', 'block');",1093904,39,"hideMask",544176,32,"getUseMask()) {\n            this.mask.setStyle('display', 'none'",111856,36,"Attempts to set the field as the active input focus.\n     * @return {Ext.field.Input} this\n     */\n    focu",1093328,53," = me.input;\n\n        if (el && el.dom.focus) {\n            el.dom.focus(",561036,55,"Attempts to forcefully blur input focus for the field.\n     * @return {Ext.field.Input",964894,37,"blu",1829904,51,"el = this.input;\n\n        if (el && el.dom.blur) {\n            el.dom.blur(",561036,55,"Attempts to forcefully select all the contents of the input field.\n     * @return {Ext.field.Input",964894,38,"elect",1909072,50,"el = me.input;\n\n        if (el && el.dom.setSelectionRange) {\n            el.dom.setSelectionRange(0, 9999",561036,44,"on",2046892,35,"ireAction('focus', [e], 'doFocus')",2040028,32,"Focus",1816431,39,"\n        me.hideMask();\n\n        if (!me.getIsFocused()) {\n            me.setStart",993173,36,"    me.setIsFocused(true)",1985551,50,"// This will prevent 300ms delayed focus from occurring on iOS\n        if(document.activeElement != e.targe",2080811,52,",\n\n    onBlur",1093952,41,"blur', [e], 'doBlur')",2040028,32,"Blur",1784319,51,"value = me.getValue(),\n            startValue = me.getStartValue();\n\n        me.showMask();\n\n        me.setIsFocused(false);\n\n        if (String(value) != String(startValue)) {\n            me.onChange(me, value, startValue);\n        }\n\n    },\n\n    // @private\n    onClearIcon",1906960,32,"fireEvent('clearicontap', this, e);\n\n        //focus the field after cleartap happens, but only on android.\n        //this is to stop the keyboard from hiding. TOUCH-2064\n   ",355299,35,"       this.focus();\n        }\n    },\n\n    onClearIconPress",1707565,33,"Icon.addCls(Ext.baseCSSPrefix + 'pressing');\n    },\n\n    onClearIconRelease",1707565,33,"Icon",469024,32,"pressing');\n    },\n\n    onClick",1093952,33,"Event('click', e);\n    },\n\n    onChange: function(me, value, startValue) {\n        if (this.useManualMaxLength()) {\n            this.trimValueToMaxLength();\n        }",1215742,34,"me, value, startValue);\n    },\n\n    onPaste",1999583,33,"useManualMaxLength()) {\n            this.trimValueToMaxLength();\n        }\n        this.fireEvent('paste', e);\n    },\n\n    onKeyUp",1999583,33,"useManualMaxLength()) {\n            this.trimValueToMaxLength();\n        }\n        this.fireEvent('keyup', e);\n    },\n\n    onKeyDown: function() {\n        // tell the class to ignore the input event. this happens when we want to listen to the field change\n        // when the input autocompletes\n        this.ignoreInput = true;\n    },\n\n    on",2076733,33,"me = this;\n\n        // if we should ignore input, stop now.\n        if (me.ignoreInput) {\n            me.ignoreInput = false;",338176,40,"// set a timeout for 10ms to check if we want to stop the input event.\n        // if not, then continue with the event (keyup)",297759,45,"if (!me.ignoreInput) {\n                me.fireEvent('keyup', e);\n                me.ignoreInpu",989676,34,", 10);\n    },\n\n    // Hack for IE10 mobile. Handle pressing 'enter' button and fire keyup event in this case.\n    onKeyPress: function(e) {\n        if(e.browserEvent.keyCode == 13){\n            this.fireEvent('keyup', e);\n        }\n    },\n\n    onMouseDown",1093952,33,"Event('mousedown', e);\n    },\n\n    trimValueToMaxLeng",1181023,32,"Length = this.getMaxLength();\n        if (maxLength) {",890103,58,"value.length > this.getMaxLength()) {\n                this.setValue(value.slice(0, maxLength",1094351,33,"\n});\n\n/**\n * @aside guide forms\n *\n * Field is the base class for all form fields used in Sencha Touch. It provides a lot of shared functionality to all\n * field subclasses (for example labels, simple validation, {@link #clearIcon clearing} and tab index management), but\n * is rarely used directly. Instead, it is much more common to use one of the field subclasses:\n *\n *     xtype            Class\n *   ",574432,41,"\n *     textfield        {@link Ext.field.Text}\n *     numberfield      {@link Ext.field.Number}\n *     textareafield    {@link Ext.field.TextArea}\n *     hiddenfield      {@link Ext.field.Hidden}\n *     radiofield       {@link Ext.field.Radio}\n *     filefield        {@link Ext.field.File}\n *     checkboxfield    {@link Ext.field.Checkbox}\n *     selectfield      {@link Ext.field.Select}\n *     togglefield      {@link Ext.field.Toggle}\n *     fieldset         {@link Ext.form.FieldSet}\n *\n * Fields are normally used within the context of a form and/or fieldset. See the {@link Ext.form.Panel FormPanel}\n * and {@link Ext.form.FieldSet FieldSet} docs for examples on how to put those together, or the list of links above\n * for usage of individual field types. If you wish to create your own Field subclasses you can extend this class,\n * though it is sometimes more useful to extend {@link Ext.field.Text} as this provides additional text entry\n * functionality.\n */\nExt.define('Ext.field.Field', {\n    extend: 'Ext.Decorator",1412800,32,"form.Field',\n    xtype: 'field',",1282911,55,"/**\n     * Set to `true` on all Ext.field.Field subclasses. This is used by {@link Ext.form.Panel#getValues} to determine which\n     * components inside a form are fields.\n     * @property isField",1392488,34,"isField: true,\n\n    // @private\n    isFormField",887338,50,838510,44,"baseCls: Ext.baseCSSPrefix + 'field',\n\n        /**\n         * The label of this field\n         * @cfg {String} label",1834352,43,"ab",1489007,48,"labelAlign The position to render the label relative to the field input.\n         * Available options are: 'top', 'left', 'bottom' and 'right",730815,43,"labelAlig",838122,41,"Number/String} labelWidth The width to make this field's label",1834736,44,"abelWidth: '30%",1013520,42,"labelWrap `true` to allow the label to wrap. If set to `false`, the label will be truncated with\n         * an ellipsi",1638432,44,"labelWrap",1861280,48,"clearIcon `true` to use a clear icon in this fiel",1028047,44,"clearIc",741744,40,"Boolean} required `true` to make this field required",1457214,34,"this only causes a visual indication.\n         *\n         * Doesn't prevent user from submitting the form",1775744,45,"qui",1167344,36,"The label Element associated with this Field",1457214,34,"Only available if a {@link #label} is specified.\n         * @type Ext.Element\n         * @property labelEl\n         * @deprecated 2.0",1247246,52,"inputType='text'] The type attribute for input fields -- e.g. radio, text, password, file.\n         * The types 'file' and 'password' must be used to render those field types currently -- there are\n         * no separate Ext components for those.\n    ",1914000,34,"`input.type` instea",1028047,44,"inputTyp",1560720,45,"} name The field's HTML name attribute",1457214,34,"this property must be set if this field is to be automatically included with.\n         * {@link Ext.form.Panel#method-submit form submit()",1857136,44,1454367,42,"Mixed} value A value to initialize this field with",740976,43,"valu",1183984,39,"Number} tabIndex The `tabIndex` for this field. Note this only applies to fields that are rendered,\n         * not those which are built via `applyTo",518336,44,"tabIndex: null",941008,39,"component The inner component for this fiel",1247888,45,"Boolean} fullscreen",1013903,34,1167860,52,", 'MountainView', ",1177757,32,"labelAlign: 'top'\n    }],",1082809,59,"labelCls",1083955,34,"L",1083798,65,742464,44,"requiredCls The `className` to be applied to this Field when the {@link #required} configuration is set",732363,53,"requiredCls: Ext.baseCSSPrefix + 'field-required",1456384,41,"inputCls CSS class to add to the input element of this fields {@link #component}\n         */\n        inputCl",1651945,32,"cfg {Boolean} isFocused\n     * `true` if this field is currently focused.\n     * @private\n     */",1028623,45,1162944,48,1070784,53,"Name: 'x-container',\n",1003023,40,1957817,34,"label',\n",1163384,35,"form-label'",1688313,33,1959669,38,"labelspan',\n                        tag: 'span'\n",1003178,39,1959760,53,1070947,37,"s: prefix + 'component-outer",181703,32,"]\n        };",1169306,35,"Label: function(newLabel, oldLabel) {\n        var",554446,35,",\n           ",1162947,38,"if (newLabel) {\n            this.labelspan.setHtml(newLabel);\n            renderElement.addCls(prefix + 'field-labeled'",1357952,34,"nderElement.removeCls(prefix + 'field-labeled');",1093904,39,"updateLabelAlign: function(newLabelAlign, oldLabelAlign) {\n        var",554446,35,",\n           ",1162947,38,"if (newLabelAlign) {\n            renderElement.addCls(prefix + 'label-align-' + newLabelAlign);\n\n            if (newLabelAlign == \"top\" || newLabelAlign == \"bottom\") {\n                this.label.setWidth('100%'",1818400,41,"his.updateLabelWidth(this.getLabelWidth()",699072,40,"oldLabelAlign) {\n            renderElement.removeCls(prefix + 'label-align-' + oldLabelAlign);",1093904,39,"updateLabelCls: function(newL",1089275,32,"if (newLabelCls) {\n            this.label.addCls(newLabe",956044,33,"LabelCls) {\n            this.label.removeCls(oldLabelCls);",1093904,39,"updateLabelWidth: function(newLabelWidth) {\n        var labelAlign = this.getLabelAlign();\n\n        if (newLabelWidth) {\n            if (labelAlign == \"top\" || labelAlign == \"bottom\") {\n                this.label.setWidth('100%'",1818400,41,"his.label.setWidth(newLabel",1182268,32,1169307,34,"LabelWrap: function(newLabelWrap, oldLabelWrap",1164444,43,"form-label-nowrap';\n\n        if (!newLabelWrap",1164524,94,764366,43,"required",1164771,51,"Required: function(newRequired) {\n        this.renderElement[newRequired",1088091,35,"RequiredCls())",1164272,37,"{@link #required",1164366,50,"RequiredCls: function(newRequiredCls, oldRequiredCls) {\n        if (this.getRequired()",552877,34,".replaceCls(oldRequiredCls, newRequiredCls);",1093904,39,"i",1782016,32,1826468,37,");\n\n        me.doInitValue(",971392,47,"doInitValue: function(",481023,38,"Mixed} originalValue\n         * The original value of the field as configured in the {@link #value} configuration.\n         * setting is `true`.\n         */\n        this.originalValue = this.getInitialConfig().",414270,32,"sets the current field value back to the original value on this field when it was created.\n     *\n",1510010,33,"field with an original value\n     *     var field =",323327,35,"xtype: 'textfield',\n     *         value: 'first value",195184,35,"// Update the value\n     *     field.setValue('new value');\n     *\n     *     // Now you can reset it back to the `first value`\n     *     field.reset();\n     *\n     * @return {Ext.field.Field} this\n     */",694419,38,"setValue(this.originalValue",834624,37,"/**\n     * Resets the field's {@link #originalValue} property so it matches the current {@link #getValue value}. This is\n     * called by {@link Ext.form.Panel}.{@link Ext.form.Panel#setValues setValues} if the form's\n     * {@link Ext.form.Panel#trackResetOnLoad trackResetOnLoad} property is set to true.\n     */\n    resetOriginalValue: function() {\n        this.originalValue = this.getValu",1767024,50,"value of this Field has been changed from its {@link #originalValue}.\n     * Will return `false` if the field is disabled or has not been rendered yet.\n     *",1320384,38,"is field has been changed from its original value (and\n     * is not disabled)",621244,35,"Dirty",1222638,42,"\n}, function() {\n});\n\n/**\n * @aside guide forms\n *\n * The text field is the basis for most of the input fields in Sencha Touch. It provides a baseline of shared\n * functionality such as input validation, standard events, state management and look and feel. Typically we create\n * text fields inside a form, like this",573803,32,"create('Ext.form.Panel'",1624144,44,863679,45,"xtype: 'fieldset',\n *                 title: 'Enter your name',\n *",1069259,49,"{\n * ",1170663,32,"textfield',\n *                         label: 'First Name',\n *    ",1432249,38,1626318,79,"xtype: 'textfield',\n *                         label: 'Last Name'",919441,33,": 'lastName'",1626496,63,1708752,36,"creates two text fields inside a form. Text Fields can also be created outside of a Form,",1191195,38,"field.Text', {\n *         label: 'Your Name',\n *         value: 'Ed Spencer'\n *     });\n *\n * ## Configuring\n *\n * Text field offers several configuration options, including {@link #placeHolder}, {@link #maxLength},\n * {@link #autoComplete}, {@link #autoCapitalize} and {@link #autoCorrect}. For example, here is how we would configure\n * a text field to have a maximum length of 10 characters, with placeholder text that disappears when the field is\n * focused:\n *\n *     Ext.create('Ext.field.Text', {\n *         label: 'Username',\n *         maxLength: 10,\n *         placeHolder: 'Enter your username'\n *     });\n *\n * The autoComplete, autoCapitalize and autoCorrect configs simply set those attributes on the text field and allow the\n * native browser to provide those capabilities. For example, to enable auto complete and auto correct, simply\n * configure your text field",1191195,38,"field.Text', {\n *         label: 'Username',\n *         autoComplete: true,\n *         autoCorrect: true\n *     });\n *\n * These configurations will be picked up by the native browser, which will enable the options at the OS level.\n *\n * Text field inherits from {@link Ext.field.Field}, which is the base class for all fields in Sencha Touch and provides\n * a lot of shared functionality for all fields, including setting values, clearing and basic validation. See the\n * {@link Ext.field.Field} documentation to see how to leverage its capabilities.\n */\nExt.define('Ext.field.Text', {\n    extend: 'Ext.field.Field',\n    xtype: 'textfield",1412800,32,"form.Text',\n\n    /**\n     * @event focus\n     * Fires when this field receives input focus\n     * @param {Ext.field.Text} this This field",1982463,34,749536,33,"lur\n     * Fires when this field loses input focus\n     * @param {Ext.field.Text} this This field",1982463,34,749536,32,"paste\n     * Fires when this field is pasted.\n     * @param {Ext.field.Text} this This field",1982463,34,749536,32,"mousedown\n     * Fires when this field receives a mousedown\n     * @param {Ext.field.Text} this This field",1982463,34,749536,32,"keyup\n     * @preventable doKeyUp\n     * Fires when a key is released on the input element\n     * @param {Ext.field.Text} this This field",1982463,34,749536,32,"clearicontap\n     * @preventable doClearIconTap\n     * Fires when the clear icon is tapped\n     * @param {Ext.field.Text} this This field",1982463,34,749536,32,"change\n     * Fires just before the field blurs if the field value has changed\n     * @param {Ext.field.Text} this This field\n     * @param {Mixed} newValue The new value\n     * @param {Mixed} oldValue The original valu",749024,33,"action\n     * @preventable doAction\n     * Fires whenever the return key or go is pressed. FormPanel listeners\n     * for this event, and submits itself whenever it fires. Also note\n     * that this event bubbles up to parent containers.\n     * @param {Ext.field.Text} this This field\n     * @param {Mixed} e The key",1856708,64,838510,44,"ui: 'tex",1456848,32,838510,44,"clearIcon",1381440,46,"placeHolder A string value displayed in the input (if supported) when the control is empty",740976,43,"placeHold",1226431,40,"Number} maxLength The maximum number of permitted input character",1638432,44,"maxLength",729632,32,"True to set the field's DOM element autocomplete attribute to \"on\", false to set to \"off\".\n         * @cfg {Boolean} autoComple",1083614,44,"autoComplet",1183984,33,"True to set the field's DOM element autocapitalize attribute to \"on\", false to set to \"off\".\n         * @cfg {Boolean} autoCapitaliz",1083615,43,"autoCapitaliz",1183984,33,"True to set the field DOM element autocorrect attribute to \"on\", false to set to \"off\".\n         * @cfg {Boolean} autoCorrect",729776,42,"autoCorrec",947808,33,"True to set the field DOM element readonly attribute to true.\n         * @cfg {Boolean} readOnly",729776,42,"readOnly",1453728,46,"component The inner component for this field, which defaults to an input tex",1162624,44,"component: {\n            xtype: 'input',\n            type: 'text',\n            fastFocus: true\n        },\n\n        bubbleEvents: ['action']",1836832,62,1777120,38,");\n\n        me.getComponent().on({\n            scope: this,\n\n            keyup       : 'onKeyUp',\n            change      : 'onChange',\n            focus       : 'onFocus',\n            blur        : 'onBlur',\n            paste       : 'onPaste',\n            mousedown   : 'onMouseDown',\n            clearicontap: 'onClearIconTap'\n        });\n\n        // set the originalValue of the textfield, if one exists\n        me.originalValue = me.getValue() || \"\";\n        me.getComponent().originalValue = me.originalValue;\n\n        me.syncEmptyCls();\n    },\n\n    syncEmptyCls: function() {\n        var empty = (this._value) ? this._value.length : false,\n            cls = Ext.baseCSSPrefix + 'empty';\n\n        if (empty)",1164572,45," else",1164525,42,1169306,35,"Value: function(newValue) {\n        var component  = this.getComponent(),\n            // allows newValue to be zero but not undefined or null (other falsey values)\n            valueValid = newValue !== undefined && newValue !== null && newValue !== \"\"",1922944,40,"component.setValue(newValue);\n        }\n\n        this[valueValid && this.isDirty() ? 'showClearIcon' : 'hideClearIcon']();\n\n        this.syncEmptyCls(",942348,51,"e = this;\n\n        me._value = me.getComponent().getValue();\n\n        me.syncEmptyCls();\n\n        return me._value;",1169306,35,"PlaceHolder: function(newPlaceHolder) {\n        this.getComponent().setPlaceHolder(newPlaceHolder",1183216,37,"MaxLength: function(newMaxLength) {\n        this.getComponent().setMaxLength(newMaxLength",1183216,37,"AutoComplete: function(newAutoComplete) {\n        this.getComponent().setAutoComplete(newAutoComplete",1183216,37,"AutoCapitalize: function(newAutoCapitalize) {\n        this.getComponent().setAutoCapitalize(newAutoCapitalize",1183216,37,"AutoCorrect: function(newAutoCorrect) {\n        this.getComponent().setAutoCorrect(newAutoCorrect",1183216,37,"ReadOnly: function(newReadOnly) {\n        if (newReadOnly) {\n            this.hideClearIcon",1333551,39,"howClearIcon();\n        }\n\n        this.getComponent().setReadOnly(newReadOnly",1183216,37,"InputType: function(newInputType",1011185,33,"getComponent();\n",1777614,37,"component.setType(newInputType);",1093904,39,1268582,40,"var component = this.getComponent();\n",1777614,37,"component.setName(newName);",1093904,39,"updateTabIndex: function(newTabIndex",1011185,33,"getComponent();\n",1777614,37,"component.setTabIndex(newTabIndex",111856,36,"Updates the {@link #inputCls} configuration on this fields {@link #component}",1090032,36,"nputCls: function(newInputCls, oldInputCls",1011185,33,"getComponent();\n",1777614,37,"component.replaceCls(oldInputCls, newInputCls);\n        }",775516,57,1777120,50,"\n        var component = me.getComponent();\n",1777614,37,"component.setDisabled(disabled);\n        }\n",954341,37,"me.hideClearIcon",1333551,33,"me.showClearIcon();",1093904,39,"showClearIcon",1544688,38,"= this,\n            value",891212,35,"// allows value to be zero but not undefined or null (other falsey values)\n            valueValid = ",1425824,51,"\"\";\n\n        if (me.getClearIcon() && !me.getDisabled() && !me.getReadOnly() && valueValid) {\n            me.e",1092045,35,"field-clearable');",1040284,43,"// @private\n    hideClearIc",781408,34,"getClearIcon()",758175,39,"Ext.baseCSSPrefix + 'field-clearable');\n        }\n    },\n\n    onKeyUp",1093952,41,"keyup', [this, e], 'doKeyUp');\n    },\n\n    /**\n     * Called when a key has been pressed in the `<input>`\n     * @private\n     */\n    doKeyUp: function(me, e) {\n        // getValue to ensure that we are in sync with the dom\n        var value",891212,35,"// allows value to be zero but not undefined or null (other falsey values)\n            valueValid = ",1425824,51,"\"\";\n\n        this[valueValid ? 'showClearIcon' : 'hideClearIcon']();\n\n        if (e.browserEvent.keyCode === 13) {\n            me.fireAction('action', [me, e], 'doAction');\n        }\n    },\n\n    doAc",859984,32,"blur();\n    },\n\n    onClearIcon",1906960,32,"fireAction('clearicontap', [this, e], 'doClearIconTap')",2040028,32,"ClearIconTap: function(me, e) {\n        me.setValue('');\n\n        //sync with the input\n        me.getValue();\n    },\n\n    onChange: function(me, value, startValue) {\n        me.fireEvent('change', this, value, startValue);\n    },\n\n    on",2046892,34,"addCls(Ext.baseCSSPrefix + 'field-focused');\n        this.isFocused = true;\n        this.fireEvent('focus', this, e);\n    },\n\n    onBlu",1816430,40,"\n        this",469024,32,"field-focused');\n        this.isFocused = false;\n\n        me.fireEvent('blur', me, e);\n",297759,46,"e.isFocused = false;\n        }, 50);\n    },\n\n    onPast",1093951,34,"Event('paste', this, e);\n    },\n\n    onMouseDown",1093952,33,"Event('mousedown', this, e",626687,38,"set the field as the active input focus.\n     * @return {Ext.field.Text} This field\n     */\n    focu",954075,34,"mponent().focus()",410656,35,"/**\n     * Attempts to forcefully blur input focus for the field.\n     * @return {Ext.field.Text} This field\n     */\n    blur",954076,33,"mponent().blur()",410656,35,"/**\n     * Attempts to forcefully select all the contents of the input field.\n     * @return {Ext.field.Text} this\n     */\n    select",954076,33,"mponent().select()",410656,35,"resetOriginalValu",1014160,33,"Parent();\n        var component = this.getComponent();\n        if(component && component.hasOwnProperty(\"originalValue\")) {\n            this.getComponent().originalValue = this.originalValue;\n        }",694389,68,"getComponent().reset();\n\n        //we need to call this to sync the input with this field\n        this.getValue();\n\n        this[this.isDirty() ? 'showClearIcon' : 'hideClearIcon']();\n    },\n\n    isDirt",1011173,45,"getComponent();\n",1777614,37,"return component.isDirty(",559965,40,"\n});\n",1173341,863063,2036404,4584,"This plugin adds pull to refresh functionality to the List",1012957,37,918351,61," fields: ['name', 'img', 'text']",1852283,37,"\n *                 name: 'rdougan',\n *                 img: 'http://a0.twimg.com/profile_images/1261180556/171265_10150129602722922_727937921_7778997_8387690_o_reasonably_small.jpg',\n *                 text: 'JavaScript developmen",1174814,58,"create('Ext.dataview",1855565,41,"\n *         store: store,\n *\n *         plugin",722800,42,1651424,34,"*                 pullText: 'Pull down for more new Tweets!",919669,35,"\n *         itemTpl: [\n *             '<img src=\"{img}\" alt=\"{name} photo\" /",687580,32,"tweet\"><b>{name}:</b> {text}</div>'",1508437,45,"plugin.PullRefresh",1082302,34,"    alias: 'plugin.pullrefresh",2105136,36,1488224,53,"view.List} list\n         * The list to which this PullRefresh plugin is connected.\n         * This will usually by set automatically when configuring the list with this plug",733856,35,"/\n        lis",947808,47,"pullText The text that will be shown while you are pulling dow",1084096,44,"pullText: 'Pull down to refresh...",1456384,41,"releaseText The text that will be shown after you have pulled down enough to show the release messag",729952,44,"releaseText: 'Release to refresh...",1456384,41,"loadingText The text that will be shown while the list is refresh",1327615,46,1810996,57,"String} loadedText The text that will be when data has been load",1028046,45,"loadedText: 'Loaded.",1456384,41,"lastUpdatedText The text to be shown in front of the last updated tim",729952,44,"lastUpdatedText: 'Last Updated:&nbsp;",1013520,42,"scrollerAutoRefresh Determines whether the attached scroller should automatically track size changes of its container.\n         * Enabling this will have performance impacts but will be necessary if your list size changes dynamically. For example if your list contains images\n         * that will be loading and have unspecified heights.\n         */\n        scrollerAutoRefresh",1861280,48,"autoSnapBack Determines whether the pulldown should automatically snap back after data has been loaded.\n         * If false call {@link #snapBack}() to manually snap the pulldown back.\n         */\n        autoSnapBack",1337744,46,"snappingAnimationDuration The duration for snapping back animation after the data has been refresh",743184,44,"snappingAnimationDuration: 300,",1834560,39,"astUpdatedDateFormat The format to be used on the last updated date.\n         */\n        lastUpdatedDateFormat: 'm/d/Y h:iA",1013520,33,"Number} overpullSnapBackDuration The duration for snapping back when pulldown has been lowered further then its height.\n         */\n        overpullSnapBackDuration",950014,36,"{Ext.XTemplate/String/Array} pullTpl The template being used for the pull to refresh markup.\n         * Will be passed a config object with properties state, message and updated",739439,53,"pullTpl: [\n            '<div class=\"x-list-pullrefresh-arrow\"></div>',\n            '<div class=\"x-loading-spinner\">',\n                '<span class=\"x-loading-top\"></span>',\n                '<span class=\"x-loading-right\"></span>',\n                '<span class=\"x-loading-bottom\"></span>',\n                '<span class=\"x-loading-left\"></span>',\n            '</div>',\n            '<div class=\"x-list-pullrefresh-wrap\">',\n                '<h3 class=\"x-list-pullrefresh-message\">{message}</h3>',\n                '<div class=\"x-list-pullrefresh-updated\">{updated}</div>',\n            '</div>'\n        ].join(''),\n\n        translatable: true\n    },\n\n    // @private\n    $state: \"pull\",\n    // @private\n    getStat",939440,36,"$state\n    },\n    // @private\n    setState: function(value) {\n        this.$state = value;\n        this.updateView();\n    },\n    // @private\n    $isSnappingBack: false,\n    // @private\n    getIsSnappingBack",766512,35,"$isSnappingBack;\n    },\n    // @private\n    setIsSnappingBack: function(value) {\n        this.$isSnappingBack = value;",1836832,33,": function(lis",1091023,37,"me.setList(list);\n        me.initScrollable(",996669,54,1952302,41,753617,62,"[\n",1170895,38,1070935,58,"Ext.baseCSSPrefix + 'list-pullrefresh",181703,32,"]\n        };",1836832,33,"Scrollab",1872576,52,"list = me.getList(),\n            scrollable = list.getScrollable(),\n            scroller;\n\n        if (!scrollable",1761791,43,"scroller = scrollable.getScroller();\n        scroller.setAutoRefresh(this.getScrollerAutoRefresh());\n\n        me.lastUpdated = new Date();\n\n        list.insert(0, me);\n",1003493,37,"roll: me.onScrollChang",791840,37,"\n        this.updateView",1183215,32,"applyPullTpl",1000832,33,"config instanceof Ext.XTemplate) {\n            return config",469808,37,"new Ext.XTemplate(config);",1093904,39,"updateList: function(newList, oldLis",1091023,41,"newList && newList != oldList) {\n            newList.on({\n",1039912,48,"scrollablechange: me.initScrollable",1895148,44,"        } else if (oldList) {\n            oldList.un({\n",1039912,48,"scrollablechange: me.initScrollable",1895148,44,784043,33,"\n    getPullHeight",1957127,34,"innerE",2076084,32,"/**\n     * @private\n     * Attempts to load the newest posts via the attached List's Store's Proxy\n     */\n    fetchLatest",1829447,43,"List()",1829486,33,"store",1587051,34,1587599,56,"{\n            page: 1,\n            start: 0,\n            model: store.getModel(),\n            limit: store.getPageSize(),\n",1565909,40,"sorters: store",1466896,34,": store.getRemoteFilter() ? store.getFilters() : []\n        });\n\n        proxy.read(operation, this.onLatestFetched",792188,32,"@private\n     * Called after fetchLatest has finished grabbing data. Matches any returned records against what is already in the\n     * Store. If there is an overlap, updates the existing records with the new data and inserts the new items at the\n     * front of the Store. If there is no overlap, insert the new records anyway and record that there's a break in the\n     * timeline between the new and the old records.\n     */\n    onLatestFetched",1703135,36,"store = this.getList().getStore(),\n            oldRecords = store.getData(),\n            newRecord",1413502,40,"length = newRecords.length,\n            toInsert = [],\n            newRecord, oldRecord",1266928,58,"ewRecord = newRecords[i];\n            oldRecord = oldRecords.getByKey(newRecord.getId());\n\n    ",783807,37,"    oldRecord.set(newRecord.getData",1818398,43,"oInsert.push(newR",913422,35,"oldRecord = undefined;\n        }\n\n        store.insert(0, toInsert);\n        this.setState(\"loaded\");\n        this.fireEvent('latestfetched', this, toInsert);\n        if (this.getAutoSnapBack()) {\n            this.snapBack",765983,37,"Snaps the List back to the top after a pullrefresh is complete\n     * @param {Boolean=} force Force the snapback to occur regardless of state {optional}\n     */\n    snapBack: function(force) {\n        if(this.getState() !== \"loaded\" && force !== true) return;\n\n        var list = this.getList(),\n            scroller = list.getScrollable().getScroller();\n\n        scroller.refresh();\n        scroller.minPosition.y = 0;\n",1003493,37,"rollend: this.onSnapBackEnd,\n",779952,38,"scope",1255803,33,"setIsSnappingBack(true);\n        scroller.scrollTo(null, 0, {duration: this.getSnappingAnimationDuration()}",330976,42,"Called when PullRefresh has been snapped back to the top\n     */\n    onSnapBack",971450,32,"etState(\"pull\");\n        this.setIsSnappingBack",561952,32,"@private\n     * Called when the Scroller updates from the list\n     * @param scroller\n     * @param x\n     * @param y\n     */\n    onScrollChange",1005607,37,"if (y <= 0) {\n            var pullHeight = this.getPullHeight(),\n                isSnappingBack = this.getIsSnappingBack();\n\n            if(this.getState() === \"loaded\" && !isSnappingBack) {\n                this.snapBack(",498400,34,"this.getState() !== \"loading\" && this.getState() !==\"loaded\") {\n                if (-y >= pullHeight + 10",358996,32,"State(\"release\");\n                    scroller.getContainer()",779852,32,"    dragend: 'onScrollerDragEnd',\n    ",779944,54,1904847,32,"    });\n                } else if ((this.getState() === \"release\") && (-y < pullHeight + 10",358995,33,"State(\"pull\");\n                    scroller.getContainer().unBefore({\n                        dragend: 'onScrollerDragEnd',\n    ",779944,54,1904847,32,274000,38,"}",969328,36,"translate(0, -y",1258528,52,"Called when the user is done dragging, this listener is only added when the user has pulled far enough for a refresh\n     */\n    onScrollerDragEnd",544176,32,"getState() !== \"loading\") {\n            var list = this.getList(),\n                scroller = list",1877120,44,"    translate",1877172,44,"    this.setState(\"loading\");\n            translateable.setEasingY({duration: this.getOverpullSnapBackDuration()});\n            scroller.minPosition.y = -this.getPullHeight();\n    ",1003494,34,"    scrollend: 'fetchLatest',\n",779948,46,"scope: this",1012752,32,339968,34,"Updates the content based on the PullRefresh Template\n     */\n    updateView",836376,32," = this.getState(),\n            lastUpdatedText = this.getLastUpdatedText() + Ext.util.Format.date(this.lastUpdated, this.getLastUpdatedDateFormat()),\n            templateConfig = {state: state, updated: lastUpdatedText},\n            stateFn = state.charAt(0).toUpperCase() + state.slice(1).toLowerCase(),\n            fn = \"get\" + stateFn + \"Text\";\n\n        if (this[fn] && Ext.isFunction(this[fn])) {\n            templateConfig.message = this[fn]",1269668,32,"this.innerElement.removeCls([\"loaded\", \"loading\", \"release\", \"pull\"], Ext.baseCSSPrefix + \"list-pullrefresh\"",1837197,44,"State(), Ext.baseCSSPrefix + \"list-pullrefresh\");\n        this.getPullTpl().overwrite(this.innerElement, templateConfig",1450576,41,"Updates the PullRefreshText.\n     * @method setPullRefreshText",656947,37,"deprecated 2.3.0 Please use {@link #setPullText} instead.\n     */\n    Ext.deprecateClassMethod(this, 'setPullRefreshText', 'setPullText');\n\n    /**\n     * Updates the ReleaseRefreshText.\n     * @method setReleaseRefreshText",656947,37,"deprecated 2.3.0 Please use {@link #setReleaseText} instead.\n     */\n    Ext.deprecateClassMethod(this, 'setReleaseRefreshText', 'setReleaseText');\n\n    this.override({\n",2081311,52,"if (config) {\n",642078,37,"* @cfg {String} pullReleaseText\n                 * Optional Text during the Release State.\n                 * @deprecated 2.3.0 Please use {@link #releaseText} instead\n",1611470,36,"if (config.hasOwnProperty('pullReleaseText')",336784,45,"\"'pullReleaseText' config is deprecated, please use 'releaseText' config instead\", this);\n                    config.releaseText = config.pullReleaseText",1001413,35,".pullReleaseText",187824,38,"**\n                 * @cfg {String} pullRefreshText\n                 * Optional Text during the Pull State.\n                 * @deprecated 2.3.0 Please use {@link #pullText} instead\n",1611470,36,"if (config.hasOwnProperty('pullRefreshText')",336784,45,"\"'pullRefreshText' config is deprecated, please use 'pullText' config instead\", this);\n                    config.pullText = config.pullRefreshText",1001413,35,".pullRefreshText",61312,47,2081639,35,2002108,33,2040999,56469,"model/Weather",2109056,490,"Ext.define('Aeropuerto.model.Weather",2095583,107,"field",2100366,35,"name: 'temp_C",2096543,86,"weatherIconUrl",2096543,86,"weatherDesc",2096543,47,2097430,2095,"store/Uuid",2109056,490,"Ext.define('Aeropuerto.store",1717566,32,"Store",999936,50,707248,33,"\n      \n\n    config: {\n        autoLoad: true,\n        autoSync: true,\n        storeId: 'Uuid",2099311,39,"localstorage",2095727,68,"key",2096543,47,2097430,44,"Suscripciones",2109056,490,"Ext.define('Aeropuerto.store.Suscripcione",2099035,268,"Suscripcione",2099310,157,"GetFlightResult",2099472,53,"store/MisVuelos",2109056,490,"Ext.define('Aeropuerto.store.MisVuelo",2099035,86,399056,37,"\n\n    config: {\n        autoLoad: true,\n        autoSync: true,\n        storeId: 'MisVuelo",2099310,40,"localstorage",2095727,160,2096815,55,2097430,44,"WeatherStore",2109056,490,"Ext.define('Aeropuerto.store.Weather",1709454,40,"\n",861728,58,847383,55,"\n",46240,37,"\n      \n\n    config: {\n        autoLoad: true,\n        autoSync: true,",2099243,34,"Weather',\n        storeId: 'WeatherStore",2099311,156,"current_condition",2099472,62,"Container",2109056,490,2100028,32,"Container",2100064,57,1018894,49,"\n",847384,45,"\n ",1918855,60,"   ",2099072,72,"\n",940795,51,"id: 'mainContainer',\n        itemId: '",2100334,131,"hideAnimation: '',\n                id: 'mainView',\n                itemId: '',\n                margin: '',\n",2101496,32,"',\n                style: 'margin-top:2%;',\n",2101545,47,"listener",1169808,51,2102397,33,"\n                    ",1087550,38,"                    swipe: function(e, node, options",277952,32,"        if(e.direction == \"left\"",277952,32,2103527,60,"showHideMenu(\"left\"",221136,39,"}\n",46240,36,"if(e.direction == \"right\"",277952,32,2103527,60,"showHideMenu(\"right\"",221136,39,"}\n",46240,32,"}\n        ",859451,45,2102450,641,",\n        ",1170891,46,1172544,49,"        id: 'btnSubscriptions",2103008,35,"text: 'Suscripciones",2103008,35,2102683,97,"\n\n            ",614165,32,2103137,115,";margin-top:2%;",2103008,35,"id: 'm",2100878,38,"width: '60%",2103008,35,2103433,102,2103629,86,1171101,81,"titlebar',\n       ",534382,37,2100650,425,"textfield",2103008,35,"docked: 'right",2103008,35,"id: 'txtFiltro",2103008,35,"label: ''\n        ",18350,38,1164031,53,1170661,34,"list',\n        ",1864684,50,1021900,40,1864715,55,1178895,37,"                    scrollend",1005607,37,"                        if(y < 0)",143808,34,"// y < 0 eso significa que el scroll fue vertical, hacia abajo.\n",46240,32,"Aeropuerto.app",2108569,37,"\"\",1",221136,35,"}",847232,35,"}\n",46240,32,644096,32,"    ",304763,43,1171997,35,2101372,48,2101470,42,2101561,179,"crollToTopOnRefresh",1654987,33,"store",2102638,37,"plugins",1163614,32,143808,34,"type: 'pullrefresh'\n        ",18350,38,1164031,53,1170661,34,"list',\n        ",1864684,50,1021900,40,1864715,55,1178895,37,"                    scrollend",1005607,37,46240,38,"          if(y < 0)",175232,38,"                    // y < 0 eso significa que el scroll fue vertical, hacia abajo.\n",46240,38,2103521,48,"Global').getDepartures(\"\",1",221136,39,"                    }",861600,37,1160288,36,142592,34,"    }\n    ",304763,43,1171997,35,2101372,51,"de",1613967,33,2101993,43,2101561,85,"destino",2102176,104,",\n           ",1651339,33,1170892,45,"        type: 'pullrefresh'\n        ",18350,38,1164031,53,1170661,34,"list",2101876,70,"de",1613967,33,"id: 'lstSubscriptions",1170831,34,2101568,78,"aerolinea}<br>{nVuelo",2102190,81,"Suscripciones'",72000,39,"]",2096576,46,"xtype: 'panel',\n",2101887,48,"hidden: true,\n",2101404,32,"',\n                id: 'details',\n                itemId: 'mypanel1',\n",2101496,32,"',\n",2101545,47,"listener",1169808,51,2102397,61,"this.element.on",2104880,35,"swipe: function(e, node, options",277952,32,"        if(e.direction == \"right\"",277952,32,2103527,60,"onDetailsBackButtonTap",2105680,40,"}\n",46240,32,"}\n        ",859451,45,2103625,90,1171101,81,"toolbar',\n       ",534382,37,"                   id: 'tbDetails',\n                        title: 'Vuelo',\n        ",1171103,45,1170783,34,1172544,49,"        id: 'btnDetailsBack",2103008,35,"iconCls: 'arrow_left'\n        ",304763,43,1170783,34,1169981,44,"       ",1163696,32,143808,34,1170687,41,"        id: 'btnDetailsSubscribe",2103008,35,"iconCls: 'favorites'\n        ",18350,38,1164031,53,1170661,34,"c",1069581,35,"centered",1613968,32,2101903,40,"id: 'flightDetails",1170831,34,"'5",2102095,33,"s",1163614,32,143808,34,1171083,36,2101887,56,"        id: 'companyName",2103008,35,"tpl",1163614,40,"'\"<h2>{nVuelo}</h2>\",",2105136,39,"'",46240,38,"      \"<h2>{aerolinea}</h2>\",",2105136,39,"'",46240,38,"      \"<h2>{origen}</h2>\"",2105136,39,"'<img style=\"height: 100px; width: 100px;\" src=\"Img/Aeromas.png\" />'\n",46240,32,"]",1597040,34,"width: '100%'\n        ",18350,38,1164031,53,1170661,34,"c",1069581,35,2101903,40,"id: 'weather',\n                        tpl",1163614,32,"'<h2>{temp_C}</h2>       <img style=\"height: 100px; width: 100px;\" src={weatherIconUrl} />'\n        ",2102303,35,"        width: '50%'",72000,39,2103714,682,"10.0.1.182",2104413,34,"        urlWeather: 'http://api.worldweatheronline.com/free/v2/weather.ashx',\n        weatherKey: '453edf069e02397083c3dcc4fe281'",2104792,60,", mascara) {\n        Ext.Ajax.on('beforerequest', function(){\n        if(mascara == '0')",316721,34,".mask({ xtype: 'loadmask' });\n        }\n        });\n",2104855,40,2104919,38,2104981,40,"headers: {\n",2105080,75,2105179,55,"},\n",2105285,40,2105349,32,2105405,46,2105475,81,2105580,53,2105657,43,2105724,37,"tienda.sync();\n",2105824,71,2105919,39,"}, this);\n",2105769,47,"tienda.load();\n            },\n   ",1106217,35,") {\n",2106231,72,2106327,48,"}\n        });\n\n        Ext.Ajax.on('requestcomplete', function(){\n            if(mascara == '0'){\n                Ext.Viewport.unmask();",2087696,32,",\n\n    getDepartures: function(filtro, mascara) {\n            ",2106955,247,2106736,47,"'+filtro+'",2106783,130,",mascara",2106913,37,"filtro, mascara",2106950,297,"'+filtro+'",2107247,113,",mascara",1962766,35,"uuid, flightNumber, timeStamp) {\n    ",2106955,244,"Subscribe xmlns=\"http://tempuri.org/\"><id>'+uuid+'</id><flightNumber>'+flightNumber+'</flightNumber><datetime>'+timeStamp+'</datetime><plataforma>Sencha</plataforma></Subscribe",2106807,32,2104855,64,2104911,70,2104973,72,2105037,59,2105088,91,2105171,42,"Subscribe'\n",46240,38,"     ",1163696,40,2105289,60,"        params: xmlParam",1597039,35,"   ",1106047,35,277952,32,"                    //algo??\n",46240,38,"     ",1163696,40,1106218,34,277952,32,"                    alert('todo mal",2106261,66,2106319,80,142592,34,"                });",2108956,46,"LogicController').changeSubscribeIcon();\n\n    },\n\n    unSubscribe: function(uuid, flightNumber, timeStamp) {\n   ",2106955,244,"UnSubscribe xmlns=\"http://tempuri.org/\"><id>'+uuid+'</id><flightNumber>'+flightNumber+'</flightNumber><datetime>'+timeStamp+'</datetime></UnSubscribe",2106807,32,2104855,64,2104911,70,2104973,72,2105037,59,2105088,91,2105171,42,"UnSubscribe'\n",46240,38,"     ",1163696,40,2105289,60,"        params: xmlParam",1597039,35,"   ",1106047,35,277952,32,304767,39,"       ",1201827,35,2105423,52,"        alert('todo mal",2106261,66,2106319,80,142592,34,859455,41,"                     ",2108957,45,"LogicController').changeSubscribeIcon(\"subscribe\");\n\n\n    },\n\n    getSubscriptions: function(uuid) {\n        //Get and clear Susbscriptions\n\n",2105572,34,"'Suscripciones');\n",2105649,43,"tienda.data.clear();\n        tienda.sync();\n        var subs = Ext.getStore('MisVuelos');\n\n        for (i = 0; i < subs.getCount(); i++) {\n            this.getFlight(subs.getAt(i).data.nVuelo,subs.getAt(i).data.fprogram);\n        }\n\n\n    },\n\n    getFlight: function(nVuelo, fprogram",2106950,252,"Flight xmlns=\"http://tempuri.org/\"><flight>'+nVuelo+'</flight><datetime>'+fprogram+'</datetime></GetFlight",2106807,32,"\n        ",2104856,63,2104903,78,2104965,80,2105029,67,2105080,99,2105163,50,"GetFlight'\n",46240,38,2103615,41,1157283,36,"'POST",2105136,43,"            params: xmlParam",1597039,35,2105385,90,2105463,68,"GetFlightResult",2105536,44,2105568,38,"'Suscripciones",2105536,44,2105828,91,2105907,75,2105966,66,2105773,67,2106075,63,304767,39,46240,32,2106177,70,"                alert('todo mal",2106261,66,2106311,88,52192,34,46240,32,"});\n    },\n\n    getWeather: function(city) {\n\n            var urlWeather = this.getUrlWeather();\n            var weatherKey = this.getWeatherKey();\n            var city = 'q='+city;\n\n            var fill = '&format=xml&num_of_days=1&key=';\n\n            var fullUrl = urlWeather +'?'+city+fill+weatherKey;\n\n            var xmlHttp = null;\n            xmlHttp",373547,37,"xmlHttp.open( \"GET\", fullUrl, false );\n            xmlHttp.send( null );\n            console.log(xmlHttp.responseText);\n\n        var vuelos = xmlHttp",2105496,35,"current_condition');\n\n",2105556,50,"'WeatherStore');\n  ",1487962,33,"tienda.getCount());\n",2105816,87,"console.log",2105933,37,2105919,47,2105982,34,"console.log(tienda.getCount());\n",2105761,63,"tienda.load",2109024,32,2107390,795,",\n            \"#btnSubscriptions\": {\n                tap: 'btnSubscriptionsTap'\n            },\n            \"#lstArribos\": {\n                itemtap: 'onArribosListTap",2108090,34,"DetailsBack\": {\n                tap: 'onDetailsBackButtonTap'\n            },\n            \"#lstPartidas\": {\n                itemtap: 'onPartidasListItemTap",2108090,34,"DetailsSubscribe\": {\n                tap: 'onDetailsSubscribeButtonTap'\n            },\n            \"#lstSubscriptions\": {\n                itemtap: 'onSuscripcionesListItemTap'\n            },\n            \"#txtFiltro\": {\n                change: 'onTextfieldChange",2108090,34,2104484,33,"MenuButtonTap'",770896,37,2108208,41,2108251,48,2108965,49,"Arrivals('','0",2108286,171,2108458,86,2108617,252,2108957,68,"'','0",2108366,82,"show();\n\n    },\n\n    btnSubscriptions",2104572,42,2108259,100,"Suscripcione",2108782,87,2108870,77,"hide();",2108955,59,"Subscriptions();\n\n        var lstSubscriptions = Ext.getCmp('lstSubscriptions');\n        lstSubscriptions.show();\n\n    },\n\n    onArribosListTap: function(dataview, index, target, record, e, eOpts) {\n\n        this.goToDetails(dataview, index, target, record, e, eOpts);\n    },\n\n    onDetailsBack",2104566,48," var c = Ext.getCmp('details');\n        var d = Ext.getCmp('mainView');\n                c.hide();\n                d.show();\n    },\n\n    onPartidasListItemTap: function(dataview, index, target, record, e, eOpts) {\n          this.goToDetails(dataview, index, target, record, e, eOpts);\n    },\n\n    onDetailsSubscribe",2104566,48,"var icon = Ext.getCmp('details').child('#tbDetails').child('#btnDetailsSubscribe');\n        var store= Ext.getStore('Uuid');\n        var uuid = store.getAt(0).get('key');\n        var c = Ext.getCmp('details').child('#flightDetails').child('#companyName').getData();\n\n        var vuelos = Ext.getStore('MisVuelos');\n        var susc = Ext.getStore('VuelosSuscriptos');\n\n        if (icon.getIconCls() === 'favorites') {\n   ",2108957,54,"subscribe(uuid,c.nVuelo,c.fprogram);\n            vuelos.add({'nVuelo' : c.nVuelo,'fprogram': c.fprogram});\n                 vuelos.sync(",2104699,48,2108965,46,"unSubscribe(uuid,c.nVuelo,c.fprogram);\n\n\n            for (i = 0; i < vuelos.getCount(); i++) {\n                 if(vuelos.getAt(i).data.nVuelo == c.nVuelo && vuelos.getAt(i).data.fprogram == c.fprogram){\n",1080518,36," i;\n ",264223,45,"vuelos.removeAt(index);\n            vuelos.sync();\n        }\n\n\n    },\n\n    onSuscripcionesListItemTap: function(dataview, index, target, record, e, eOpts) {\n          this.goToDetails(dataview, index, target, record, e, eOpts);\n    },\n\n    onTextfieldChange: function(textfield, newValue, oldValue, eOpts) {",2108457,61,"if(lstArrivals.isHidden()){\n\n    ",2108957,68,"newValue);\n        }\n        else{\n    ",2108957,57,"Arrivals(new",547663,32,"Menu",2104566,48,"this.showHideMenu(\"\");\n    },\n\n    createUuid",1171280,32,"function s4(",281775,33,"th.floor((1 + Math.random()) * 0x10000)",46228,32,".toString(16)",46228,32,".substring(1);\n",18352,36,183598,38,"    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n                           s4() + '-' + s4() + s4() + s4();\n                  };\n    },\n\n    goToDetails: function(dataview, index, target, record, e, eOpts) {\n        var info",1817680,37,"var c = Ext.getCmp('details');\n            if(c === undefined){\n                alert(\"MUERTEEE\"",789760,33,"set the info\n            info = c.child('#flightDetails');\n            info.child('#companyName').setData(record.data);\n            // info.child('#data').setData(record.data);\n\n            var d = Ext.getCmp('mainView');\n\n            var b = Ext.getCmp('details').child('#tbDetails').child('#btnDetailsSubscribe');\n\n            var esMyVuelo =  Ext.getStore('MisVuelos');\n\n            var index = esMyVuelo.find('nVuelo', record.data.nVuelo);\n\n            if(index < 0){\n                b.setIconCls('favorites');\n            }else{\n                b.setIconCls('trash');\n\n            }\n            d.hide();\n            c.show();\n\n",2105556,50,"'WeatherStore');\n",2105633,75,2105724,45,"tienda.sync();\n\n        //    if(record.data.esArribo == 'true'){\n        ",2108957,57,"Weather(record.data.destino);\n                c.child('#weather').setData(tienda.getAt(0).data);\n           var temp = tienda.getAt(0).temp_C;\n\n\n\n            //console.log(temp);\n\n        //    }else{\n\n        //    }\n           //",2108963,51,"Weather(record.data.origen);\n\n        }\n\n    },\n\n    getTimeStamp: function() {\n        //Return a timestamp with the format \"yy-m-d h:MM:ss\" ex. 2014-11-17 14:47:1\n\n\n        // Create a date object with the current time\n          var now = new Date();\n\n        // Create an array with the current month, day and time\n          var date = [ now.getFullYear(), now.getMonth() + 1, now.getDate() ];\n\n        // Create an array with the current hour, minute and second\n          var time = [ now.getHours(), now.getMinutes(), now.getSeconds() ];\n\n\n        // Return the formatted string\n          return date.join(\"-\") + \" \" + time.join(\":\") ;\n    },\n\n    changeSubscribeIcon: function() {\n        var c = Ext.getCmp('details').child('#tbDetails').child('#btnDetailsSubscribe');\n\n        if (c.getIconCls() === 'favorites') {\n        c.setIconCls('trash",2104698,45,"c.setIconCls('favorites');\n        }\n    },\n\n    showHideMenu: function(referrer",2104602,69,"if(referrer === \"\" || referrer == \"right\")\n    ",2104659,88,"if(referrer === \"\" || referrer == \"left\")\n    ",2104735,53,2109029,624,",\n        'Weather",2109652,60,",\n        'Uuid',\n        'Suscripciones',\n        'MisVuelos',\n        'WeatherStore",2109711,35,"Container",2109750,170,"        var store= Ext.getStore('Uuid');\n\n        var suscripciones = Ext.getStore('ListaSuscripciones');\n\n        if(store.getCount() === 0){\n            var guid =",2108963,39,"LogicController').createUuid();\n\n            var uuid = guid();\n            store.add({key : uuid});\n        }",2108956,58,"Arrivals('','0');",2109919,42,"Container",2109965,90,"GITHUB/aicaip/Aeropuerto/app.js\n\n"]