/*
 * File: app/controller/Usuarios.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Aeropuerto.controller.Usuarios', {
    extend: 'Ext.app.Controller',

    config: {
        urlServer: 'http://audiodes.ddns.net/aicmobileservice/mobilews.asmx',

        control: {
            "#btnLogin": {
                tap: 'btnLogin'
            },
            "#btnLoginInicial": {
                tap: 'onloginInicialButtonTap'
            },
            "#btnRegisterInicial": {
                tap: 'onRegisterInicialButtonTap'
            },
            "#userContainerHome": {
                tap: 'onHomeButtonTap'
            },
            "#btnRegister": {
                tap: 'onRegisterButtonTap'
            },
            "#trueLogin": {
                tap: 'onTrueLoginTap'
            },
            "#btnLogOut": {
                tap: 'onButtonLogOutTap'
            },
            "#btnModificarDatos": {
                tap: 'onModificarDatosTap'
            }
        }
    },

    btnLogin: function(button, e, eOpts) {
        Ext.Viewport.hideMenu('left');
        this.getApplication().getController('Global').checkConnection();
        this.getApplication().getController('LogicController').hideViewAll();
        Aeropuerto.app.referrer = '';
        this.resetForms();
        this.getApplication().getController('Usuarios').goToLogin();
    },

    onloginInicialButtonTap: function(button, e, eOpts) {
            var a = Ext.getCmp('loginForm');
            var b = Ext.getCmp('initial');

        Ext.getCmp('userContainerHome').setIconCls('arrow_left');

            a.show();
            b.hide();
    },

    onRegisterInicialButtonTap: function(button, e, eOpts) {
        var a = Ext.getCmp('registerForm');
        var b = Ext.getCmp('loginForm');

        Ext.getCmp('userContainerHome').setIconCls('arrow_left');
        this.resetForms();
        a.show();
        a.setTitle('Register');
        b.hide();
    },

    onHomeButtonTap: function(button, e, eOpts) {
            if(!Ext.getCmp('Logged').isHidden()){
               this.getApplication().getController('LogicController').showHideMenu('');
            }else{

            if(Ext.getCmp('loginForm').isHidden()){
                if(Ext.getCmp('registerForm').getTitle() === 'Edit'){
                      Ext.getCmp('registerForm').hide();
                      Ext.getCmp('Logged').show();
                      Ext.getCmp('userContainerHome').setIconCls('list');
                }else{
                    var a = Ext.getCmp('loginForm');
                    var b = Ext.getCmp('registerForm');
                    Ext.getCmp('userContainerHome').setIconCls('list');
                    a.show();
                    b.hide();
                    this.resetForms();
                    }
            }else{

               this.getApplication().getController('LogicController').showHideMenu('');
            }
                }
    },

    onRegisterButtonTap: function(button, e, eOpts) {
        this.getApplication().getController('Global').checkConnection();


        if(this.getApplication().getController('LogicController').validateEmail(Ext.getCmp('registerEmail').getValue())){

            if(Ext.getCmp('registerName').getValue().length > 2){
                    if(Ext.getCmp('registerLastName').getValue().length > 2){
                        if(Ext.getCmp('registerPassword').getValue().length > 5){
                                if(Ext.getCmp('registerDate').getValue() !== null){

                                    if(Ext.getCmp('registerForm').getTitle() === 'Edit'){
                                        if(Ext.getCmp('registerPassword2').getValue() == Ext.getCmp('registerPassword').getValue()){
                                                                            alert('todo bien');

                                        }else{
                                        alert('clave no iguales');
                                        }
                                    }else{
                                         this.createUser(Ext.getCmp('registerName').getValue(),Ext.getCmp('registerLastName').getValue(),Ext.getCmp('registerDate').getValue('d/m/Y'),Ext.getCmp('registerPassword').getValue(),Ext.getCmp('registerEmail').getValue(),'');
                                    }
                                }else{
                                alert('ingrese fecha');
                                }

                        }else{
                        alert('clave minimo 6 caracteres');
                        }
                    }else{
                    alert('Apellido minimo 3 caracteres');
                    }
            }else{
            alert('Nombre minimo 3 caracteres');
            }
        }else{
            alert('formato de email incorrecto');
        }



        /*

        if(Ext.getCmp('registerForm').getTitle() === 'Edit'){

            var user = Ext.getStore('UsuarioStore').getAt(0);
            this.updateUser(Ext.getCmp('registerName').getValue(),Ext.getCmp('registerLastName').getValue(),Ext.getCmp('registerDate').getValue('d/m/Y'), user.data.password,Ext.getCmp('registerEmail').getValue(),'',Ext.getCmp('registerPassword').getValue(),Ext.getCmp('registerPassword2').getValue());

        }else{
         this.createUser(Ext.getCmp('registerName').getValue(),Ext.getCmp('registerLastName').getValue(),Ext.getCmp('registerDate').getValue('d/m/Y'),Ext.getCmp('registerPassword').getValue(),Ext.getCmp('registerEmail').getValue(),'');
        }

        */
    },

    onTrueLoginTap: function(button, e, eOpts) {
        this.getApplication().getController('Global').checkConnection();

        if(this.getApplication().getController('LogicController').validateEmail(Ext.getCmp('loginUsername').getValue())){

            if(Ext.getCmp('loginPassword').getValue().length < 6){
                alert('clave minimo 6 caracteres');
                //this.userLogin(Ext.getCmp('loginUsername').getValue(),Ext.getCmp('loginPassword').getValue());
            }else{
                alert('se puede completar el login');
            }

        }else{
            alert('formato de email incorrecto');
        }
    },

    onButtonLogOutTap: function(button, e, eOpts) {
        var tienda = Ext.getStore('UsuarioStore');
        tienda.getProxy().clear();
        tienda.data.clear();
        tienda.sync();

        this.goToLogin();
    },

    onModificarDatosTap: function(button, e, eOpts) {
        var a = Ext.getCmp('registerForm');
        Ext.getCmp('initial').hide();
        Ext.getCmp('Logged').hide();
        Ext.getCmp('loginForm').hide();

        Ext.getCmp('userContainerHome').setIconCls('arrow_left');

        a.show();
        a.setTitle('Edit');

        var user = Ext.getStore('UsuarioStore').getAt(0);
        var separado = user.data.fnac.split("-");

        //var dia = separado[2].split("T");
        var dia = separado[0].split("/");

        console.log( dia[0] +' = ' + dia[1] +' '+ dia[2]);

        Ext.getCmp('registerName').setValue(user.data.nombre);
        Ext.getCmp('registerLastName').setValue(user.data.apellido);
        Ext.getCmp('registerDate').setValue({day: dia[0], month: dia[1], year: dia[2]});
        Ext.getCmp('registerPassword').setValue(user.data.password);
        Ext.getCmp('registerPassword2').show();
        Ext.getCmp('registerPassword2').setValue(user.data.password);
        Ext.getCmp('registerEmail').setValue(user.data.email);

        Ext.getCmp('registerEmail').disable();

    },

    createUser: function(nombre, apellido, fnacimiento, contrasena, email, nacionalidad) {
        var xmlParams = '<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><CreateUser xmlns="http://tempuri.org/"><pEmail>'+email+'</pEmail><pNombre>'+nombre+'</pNombre><pApellido>'+apellido+'</pApellido><pPassword>'+contrasena+'</pPassword><pFNac>'+fnacimiento+'</pFNac><pNacionalidad>'+nacionalidad+'</pNacionalidad></CreateUser></soap:Body></soap:Envelope>';
        Ext.Ajax.request({
                                            url: this.getUrlServer(),
                                            useDefaultXhrHeader: false,
                                            headers: {
                                                'Content-Type': 'text/xml; charset=utf-8',
                                                'SOAPAction': 'http://tempuri.org/CreateUser'
                                            },
                                            method: 'POST',
                                            params: xmlParams,
                                            success: function(response) {

                                                var mensaje = response.responseXML.getElementsByTagName('CreateUserResult')[0].firstChild.nodeValue;
                                               if(mensaje == 'El Usuario se ha Creado Correctamente'){
        Ext.Msg.alert( '', 'Usuario creado con exito ');                                        var tienda = Ext.getStore('UsuarioStore');
                                                tienda.add({nombre : nombre,apellido:apellido,fnac : fnacimiento,email :email,password:contrasena,nacionalidad:nacionalidad});
                                                tienda.sync();
                                                tienda.load();
                                                if(Aeropuerto.app.referrer !== ''){
                                                    Aeropuerto.app.getController('LogicController').showView(Aeropuerto.app.referrer);
                                                }else{
                                                    Aeropuerto.app.getController('Usuarios').goToLogin();
                                                }
                                               }else{
                                                   Ext.Msg.alert( '', 'No se pudo crear el contacto ');
                                               }
                                            },
                                            failure: function(response) {

                                                console.log(response.responseText);
                                            }
                                        });
    },

    userLogin: function(email, password) {
        var xmlParams = '<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><LogIn xmlns="http://tempuri.org/"><email>'+email+'</email><password>'+password+'</password></LogIn></soap:Body></soap:Envelope>';
        Ext.Ajax.request({
                                                    url: this.getUrlServer(),
                                                    useDefaultXhrHeader: false,
                                                    headers: {
                                                        'Content-Type': 'text/xml; charset=utf-8',
                                                        'SOAPAction': 'http://tempuri.org/LogIn'
                                                    },
                                                    method: 'POST',
                                                    params: xmlParams,
                                                    success: function(response) {

                                                          var tienda = Ext.getStore('UsuarioStore');
                                                          tienda.getProxy().getReader().setRecord('LogInResult');
                                                          var usuarios = response.responseXML.getElementsByTagName('LogInResponse');
                                                          Ext.each(usuarios, function(usuario) {
                                                                tienda.addData(usuario);
                                                                }, this);
                                                            if(tienda.getCount() > 0){
                                                                tienda.sync();
                                                                tienda.load();
                                                                Ext.Msg.alert( '', 'Login realizado con exito ');
                                                                if(Aeropuerto.app.referrer !== ''){
                                                                    Aeropuerto.app.getController('LogicController').showView(Aeropuerto.app.referrer);
                                                                }else{
                                                                   Aeropuerto.app.getController('Usuarios').goToLogin();
                                                                }
                                                            }else{
                                                                Ext.Msg.alert( '', 'Login incorrecto ');
                                                            }
                                                    },
                                                    failure: function(response) {
                                                        console.log(response.responseText);
                                                    }
                                                });
    },

    updateUser: function(nombreNuevo, apellidoNuevo, fnacNuevo, contrasena, email, nacionalidadNuevo, newPass1,newPass2) {
        var xmlParams = '<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><UpdateUser xmlns="http://tempuri.org/"><email>'+email+'</email><password>'+contrasena+'</password><newPassword1>'+newPass1+'</newPassword1><newPassword2>'+newPass2+'</newPassword2><newNombre>'+nombreNuevo+'</newNombre><newApellido>'+apellidoNuevo+'</newApellido><newFNac>'+fnacNuevo+'</newFNac><newNacionalidad>'+nacionalidadNuevo+'</newNacionalidad></UpdateUser></soap:Body></soap:Envelope>';

        Ext.Ajax.request({
                                            url: this.getUrlServer(),
                                            useDefaultXhrHeader: false,
                                            headers: {
                                                'Content-Type': 'text/xml; charset=utf-8',
                                                'SOAPAction': 'http://tempuri.org/UpdateUser'
                                            },
                                            method: 'POST',
                                            params: xmlParams,
                                            success: function(response) {

                                                var tienda = Ext.getStore('UsuarioStore');
                                                tienda.getProxy().getReader().setRecord('UpdateUserResult');
                                                var usuarios = response.responseXML.getElementsByTagName('UpdateUserResponse');
                                                Ext.each(usuarios, function(usuario) {
                                                    tienda.addData(usuario);
                                                    }, this);
                                                        if(tienda.getCount() > 1){
                                                            tienda.removeAt(0);
                                                            tienda.sync();
                                                            tienda.load();
                                                                Ext.Msg.alert( '', 'Usuario actualizado con exito ');
                                                                Aeropuerto.app.getController('Usuarios').goToLogin();
                                                         }else{
                                                             Ext.Msg.alert( '', 'No se ha podido actualizar el usuario ');
                                                         }
                                            },
                                            failure: function(response) {
                                                console.log(response.responseText);
                                            }
                                        });
    },

    goToLogin: function() {
            var userContainer = Ext.getCmp('userContainer');
            userContainer.show();
            this.hideRegisterForms();
            //var initial = Ext.getCmp('initial');
            var initial = Ext.getCmp('loginForm');
            var logged = Ext.getCmp('Logged');

            var tienda = Ext.getStore('UsuarioStore');
            if(tienda.getCount() > 0){
                logged.show();
                initial.hide();
                Ext.getCmp('loggedLabel').setHtml('Ya estas logeado como: '+tienda.getAt(0).data.nombre);
                Ext.getCmp('userContainerHome').setIconCls('list');
            }else{
                logged.hide();
                initial.show();
                this.resetForms();
            }

    },

    hideRegisterForms: function() {
         Ext.getCmp('registerForm').hide();
         Ext.getCmp('loginForm').hide();
    },

    resetForms: function() {
                Ext.getCmp('registerName').setValue('');
                Ext.getCmp('registerLastName').setValue('');
                Ext.getCmp('registerDate').setValue('');
                Ext.getCmp('registerPassword').setValue('');
                Ext.getCmp('registerPassword2').setValue('');
                Ext.getCmp('registerPassword2').setValue('');
                Ext.getCmp('registerEmail').setValue('');

                Ext.getCmp('loginPassword').setValue('');
                Ext.getCmp('loginUsername').setValue('');
    }

});