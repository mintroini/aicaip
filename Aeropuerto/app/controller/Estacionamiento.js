/*
 * File: app/controller/Estacionamiento.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Aeropuerto.controller.Estacionamiento', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "#estacionamientoContainerHome": {
                tap: 'onHomeButtonTap'
            },
            "#btnEstacionamiento": {
                tap: 'btnEstacionamiento'
            },
            "#seleccionarHoraComienzo": {
                tap: 'selectHoraTap'
            },
            "#seleccionarTiempoReserva": {
                tap: 'selectHoraTap1'
            },
            "#btnEstacionamientoContinuar": {
                tap: 'onEstacionamientoContinuar'
            },
            "#estacionamientoConfirmar": {
                tap: 'onEstacionamientoConfirmar'
            },
            "#estacionamientoCancelar": {
                tap: 'onEstacionamientoCancelar'
            }
        }
    },

    onHomeButtonTap: function(button, e, eOpts) {
           this.getApplication().getController('LogicController').showHideMenu('');
    },

    btnEstacionamiento: function(button, e, eOpts) {
        this.getApplication().getController('Global').checkLogged('EstacionamientoContainer');
        this.resetForm();
    },

    selectHoraTap: function(button, e, eOpts) {
        Ext.getCmp('EstacionamientoHoraPicker').show();


    },

    selectHoraTap1: function(button, e, eOpts) {
        Ext.getCmp('EstacionamientoReservarHora').show();


    },

    onEstacionamientoContinuar: function(button, e, eOpts) {
        var fecha = new Date();

        var horas = fecha.getTime() - (fecha.getHours()*3600000 + fecha.getMinutes()*60000 +fecha.getSeconds()*1000+ fecha.getMilliseconds());

        var siguiente = true;
        var mensaje = Ext.getStore('StringsStore').getAt(0).data.global_fallo;
        mensaje += '<br>';

        if(Ext.getCmp('estacionamientoDatePicker').getValue() === null){
            mensaje += Ext.getStore('StringsStore').getAt(0).data.lavados_fecha;
            mensaje += '<br>';
            siguiente = false;

        }else{
            if(Ext.getCmp('estacionamientoDatePicker').getValue().getTime() < horas){
                mensaje += Ext.getStore('StringsStore').getAt(0).data.lavados_fecha;
                mensaje += '<br>';
                siguiente = false;
            }
        }

        if( Ext.getCmp('estacionamientoMatricula').getValue() < 1){
            mensaje += Ext.getStore('StringsStore').getAt(0).data.lavados_matricula;
            mensaje += '<br>';
            siguiente = false;
        }
        if( Ext.getCmp('estacionamientoMarca').getValue() < 1){
            mensaje += Ext.getStore('StringsStore').getAt(0).data.lavados_marca;
            mensaje += '<br>';
            siguiente = false;
        }
        if( Ext.getCmp('estacionamientoModelo').getValue() < 1){
            mensaje += Ext.getStore('StringsStore').getAt(0).data.lavados_modelo;
            mensaje += '<br>';
            siguiente = false;
        }
        if( Ext.getCmp('estacionamientoModelo').getValue() < 1){
            mensaje += Ext.getStore('StringsStore').getAt(0).data.lavados_modelo;
            mensaje += '<br>';
            siguiente = false;
        }


        if(siguiente){
            Ext.getCmp('estacionamientoForm').hide();
            Ext.getCmp('confirmarEstacionamientoForm').show();
        }else{
            Ext.Msg.alert( '', mensaje);
        }

    },

    onEstacionamientoConfirmar: function(button, e, eOpts) {
        if(Ext.getCmp('estacionamientoTerminos').getChecked()){

            Ext.Msg.alert( '', 'Se esta procesando su solicitud ');//Ext.getCmp('estacionamientoForm').
            Ext.getCmp('estacionamientoForm').show();
            Ext.getCmp('confirmarEstacionamientoForm').hide();
            this.resetForm();

        }else{
            Ext.Msg.alert( '', Ext.getStore('StringsStore').getAt(0).data.lavados_aceptarTerminos);
        }
    },

    onEstacionamientoCancelar: function(button, e, eOpts) {
        Ext.Msg.confirm(Ext.getStore('StringsStore').getAt(0).data.global_cancel, Ext.getStore('StringsStore').getAt(0).data.global_cancelarConfirmado, function(btn){
            if (btn == 'yes'){
                Ext.getCmp('estacionamientoForm').show();
                Ext.getCmp('confirmarEstacionamientoForm').hide();
                        Aeropuerto.app.getApplication().getController('Estacionamiento').resetForm();
            }
        });

    },

    resetForm: function() {
        Ext.getCmp('estacionamientoMatricula').setValue('');
        Ext.getCmp('estacionamientoDatePicker').setValue('');
        Ext.getCmp('estacionamientoMarca').setValue('');
        Ext.getCmp('estacionamientoModelo').setValue('');

        Ext.getCmp('lblTiempoReserva').setHtml('Tiempo de reserva 00:00 minutos');
        Ext.getCmp('lblHoraComienzo').setHtml(Ext.getStore('StringsStore').getAt(0).data.lavado_horaComienzo +' 00:00 AM');

        Ext.getCmp('estacionamientoTerminos').setValue(0);
        Ext.getCmp('estacionamientoPrecioServicio').setHtml(Ext.getStore('StringsStore').getAt(0).data.lavados_costo);

    }

});