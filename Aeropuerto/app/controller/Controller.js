/*
 * File: app/controller/Controller.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Aeropuerto.controller.Controller', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "button#btnMenuArrivals": {
                tap: 'onMenuArrivalsButtonTap'
            },
            "button#btnArrivals": {
                tap: 'onSelectArrivalsButtonTap'
            },
            "button#btnDepartures": {
                tap: 'onSelectDeparturesButtonTap'
            },
            "#lstArribos": {
                itemtap: 'onListItemTap1'
            },
            "#btnBackDetals": {
                tap: 'onBackDetailsButtonTap'
            }
        }
    },

    onMenuArrivalsButtonTap: function(button, e, eOpts) {
        /*
        var soapMessage ='<?xml version="1.0" encoding="utf-8"?>\n<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns="http://tempuri.org/GetArrivals"><soap:Header/><soap:Body><GetArrivalsResult><Vuelo><nVuelo>string</nVuelo><aerolinea>string</aerolinea><origen>string</origen><via>string</via><estadosp>string</estadosp><estadoin>string</estadoin><terminal>string</terminal><sector>string</sector><cinta>string</cinta><reclamo>string</reclamo><festima>dateTime</festima><fprogram>dateTime</fprogram><freal>dateTime</freal><destino>string</destino><checkin>string</checkin><puerta>string</puerta><esArribo>boolean</esArribo><aeropuerto>string</aeropuerto></Vuelo><Vuelo><nVuelo>string</nVuelo><aerolinea>string</aerolinea><origen>string</origen><via>string</via><estadosp>string</estadosp><estadoin>string</estadoin><terminal>string</terminal><sector>string</sector><cinta>string</cinta><reclamo>string</reclamo><festima>dateTime</festima><fprogram>dateTime</fprogram><freal>dateTime</freal><destino>string</destino><checkin>string</checkin><puerta>string</puerta><esArribo>boolean</esArribo><aeropuerto>string</aeropuerto></Vuelo></GetArrivalsResult></soap:Body></soap:Envelope>';



                Ext.Ajax.request({
                   url: 'http://10.0.1.182/AICMobileService/MobileWS.asmx',
                   callbackKey: 'callback',
                   scope: 'this',
                   method: 'POST',
                    params : {filter:'""'},
                   headers: {'Content-Type': 'application/soap+xml; charset=utf-8; action="http://tempuri.org/GetArrivals"'},
                   success: function(response) {
                      // OK
                       alert("ok");
                       alert(response.responseText);
                       alert(response.responseXML);
                       var jsonData = Ext.util.XML.decode(response.responseText);
                       alert(jsonData);
                       console.out("prueba");
                       console.out (jsonData);
                   },
                    failure: function(response) {
                      // KO
                        alert("errpr");
                        alert(response.resposeText);
                   },
                   xmlData: soapMessage
                });
        */


        var c = Ext.getCmp('menu');
        if(c === undefined){
            c = Ext.create('Aeropuerto.view.Menu');
            Ext.Viewport.add(c);
        }
        c.show({type:'slideIn', direction:'right', duration:70});

        var f =Ext.Viewport.getActiveItem();

        //Ext.Viewport.toggleMenu('right');
        //Ext.Viewport.setActiveItem(c, {type:'slide'});


    },

    onSelectArrivalsButtonTap: function(button, e, eOpts) {
        // Show or hide sliding menu:				var settingsPanel = Ext.getCmp('sliding_menu');
        /* var c = Ext.getCmp('menu');

        					        //if (settingsPanel.isHidden()) {
        					        //    settingsPanel.show({type:'slideIn', direction:'right', duration:70});
        					      //  } else {
        					           c.hide({type: 'slideOut', direction: 'left', duration: 70});
        var c = Ext.getCmp('arrivals');
        if(c === undefined) {
            c = Ext.create('Aeropuerto.view.Arrivals');
             Ext.Viewport.add(c);
        }

                c.show({type:'slideIn', direction:'left', duration:70});
        Ext.Viewport.setActiveItem(c); */

        Ext.getCmp('navigation').hide({type: 'slideOut', direction: 'left', duration: 70});
        var c = Ext.getCmp('main-toolbar');
        var p = Ext.getCmp('lstPartidas');
        p.hide();
        var a = Ext.getCmp('lstArribos');
        a.show();
        c.setTitle('Arribos');
        var me = this;
        me.getArrivals();

    },

    onSelectDeparturesButtonTap: function(button, e, eOpts) {
        // Show or hide sliding menu:				var settingsPanel = Ext.getCmp('sliding_menu');
        /* var c = Ext.getCmp('menu');
         c.hide({type: 'slideOut', direction: 'left', duration: 70});
        var d = Ext.getCmp('departures');
                if(d === undefined){
                     d = Ext.create('Aeropuerto.view.Departures');
                    Ext.Viewport.add(d);
                }

                d.show({type:'slideIn', direction:'left', duration:70});
        Ext.Viewport.setActiveItem(d);*/

        Ext.getCmp('navigation').hide({type: 'slideOut', direction: 'left', duration: 70});
        var c = Ext.getCmp('main-toolbar');
        c.setTitle('Partidas');
        var p = Ext.getCmp('lstPartidas');
        p.show();
        var a = Ext.getCmp('lstArribos');
        a.hide();
        var me = this;
        me.getDepartures();
    },

    onListItemTap1: function(dataview, index, target, record, e, eOpts) {
                var info;

                        if (record) {
                        var c = Ext.getCmp('details');
                        if(c === undefined){
                           alert("MUERTEEE");
                        }
                        //    c.setTitle("Vuelo");


                            // set the info
                            info = c.child('#info');
                            info.child('#photo').setData(record.data);
                           // info.child('#data').setData(record.data);

        var se = Ext.Viewport.getActiveItem();
                            alert(se);
                            var p = Ext.getCmp('lstPartidas');
                p.hide();
                var a = Ext.getCmp('lstArribos');
                a.hide();
               //container.push(c);
                            c.show();
                        }
    },

    onBackDetailsButtonTap: function(button, e, eOpts) {
        var origen =  Ext.getCmp('details');
        if(){

        }else{

        }
    },

    launch: function() {
        var me = this;
        //	Aeropuerto.Controller.getVuelos
              me.getArrivals();
               // AIC.Global.getDepartures();

               // Ext.Viewport.add(Ext.create('Aeropuerto.view.Main'));
    },

    getArrivals: function() {
        var me = this;
        var xmlParams = '<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><GetArrivals xmlns="http://tempuri.org/"><filter></filter></GetArrivals></soap:Body></soap:Envelope>';
                    	 me.getVuelos('GetArrivals', 'Arribos', xmlParams);
    },

    getVuelos: function(tipo, laTienda, parametros) {
        Ext.Ajax.request({
                    url: 'http://10.0.1.182/aicmobileservice/mobilews.asmx',
                    useDefaultXhrHeader: false,
                    headers: {
                        'Content-Type': 'text/xml; charset=utf-8',
                        'SOAPAction': 'http://tempuri.org/' + tipo
                    },
                    method: 'POST',
                    params: parametros,
                    success: function(response) {
                        var vuelos = response.responseXML.getElementsByTagName('Vuelo');
                        var tienda = Ext.getStore(laTienda);
                        tienda.getProxy().clear();
                        tienda.data.clear();
                        tienda.sync();
                        Ext.each(vuelos, function(vuelo) {
                            tienda.addData(vuelo);
                        }, this);
                        tienda.sync();
                        tienda.load();
                    },
                    failure: function(response) {
                        alert(response.responseText);
                        console.log(response.responseText);
                    }
                });
    },

    getDepartures: function() {
        var xmlParams = '<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><GetDepartures xmlns="http://tempuri.org/"><filter></filter></GetDepartures></soap:Body></soap:Envelope>';
            	this.getVuelos('GetDepartures', 'Partidas', xmlParams);
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        /*
        var info;

        if (record) {
            var c = Ext.getCmp('details');
            if(c === undefined){
                alert("MUERTEEE");
            }
            //     c.setTitle("Vuelo");


            // set the info
            info = c.child('#info');
            info.child('#photo').setData(record.data);
            // info.child('#data').setData(record.data);

            c.show();
            var p = Ext.getCmp('lstPartidas');
            p.hide();
            var a = Ext.getCmp('lstArribos');
            a.hide();

        }*/
    }

});