/*
 * File: app/controller/LogicController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Aeropuerto.controller.LogicController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "#btnSubscriptions": {
                tap: 'btnSubscriptionsTap'
            },
            "#btnVuelos": {
                tap: 'btnVuelosTap'
            },
            "#vuelosContainerHome": {
                tap: 'onVuelosButtonTap'
            },
            "#lstArribos": {
                itemtap: 'onArribosListTap'
            },
            "#btnDetailsBack": {
                tap: 'onDetailsBackButtonTap'
            },
            "#lstPartidas": {
                itemtap: 'onPartidasListItemTap'
            },
            "#btnDetailsSubscribe": {
                tap: 'onDetailsSubscribeButtonTap'
            },
            "#lstSubscriptions": {
                itemtap: 'onSuscripcionesListItemTap'
            },
            "#txtFiltro": {
                change: 'onTextfieldChange'
            },
            "#suscripcionesContainerHome": {
                tap: 'onSuscripcionesHomeButtonTap'
            },
            "#btnDetailsRefresh": {
                tap: 'onDetailsRefresh'
            },
            "#btnOffLine": {
                tap: 'btnOffLine'
            }
        }
    },

    btnSubscriptionsTap: function(button, e, eOpts) {

        Ext.Viewport.hideMenu('left');
        this.getApplication().getController('Global').checkConnection();

        //this.hideViewAll();
        //this.showView('SuscripcionesContainer');

        this.getApplication().getController('Global').checkLogged('SuscripcionesContainer');

        Aeropuerto.app.referrer = 'SuscripcionesContainer';

        this.beforeSubscriptions();
    },

    btnVuelosTap: function(button, e, eOpts) {
        this.getApplication().getController('Global').checkConnection();
        Ext.getCmp('vuelosTabPanel').mask({ xtype: 'loadmask' });

            Aeropuerto.app.getApplication().getController('LogicController').showHideMenu('');
            Ext.Viewport.hideMenu('left');
            this.getApplication().getController('LogicController').hideViewAll();
            Ext.getCmp('VuelosContainer').show();
            Aeropuerto.app.referrer = 'VuelosContainer';
        //setTimeout(function() {

        this.getApplication().getController('Global').getArrivals('',1,'vuelosTabPanel');
        this.getApplication().getController('Global').getDepartures('',1,'vuelosTabPanel');

        //},500);



    },

    onVuelosButtonTap: function(button, e, eOpts) {
        this.showHideMenu("");
    },

    onArribosListTap: function(dataview, index, target, record, e, eOpts) {

        this.goToDetails(dataview, index, target, record, e, eOpts);
    },

    onDetailsBackButtonTap: function(button, e, eOpts) {
                this.showView(Aeropuerto.app.referrer);
        if(Aeropuerto.app.referrer === 'SuscripcionesContainer') this.beforeSubscriptions();
    },

    onPartidasListItemTap: function(dataview, index, target, record, e, eOpts) {
          this.goToDetails(dataview, index, target, record, e, eOpts);
    },

    onDetailsSubscribeButtonTap: function(button, e, eOpts) {
        this.getApplication().getController('Global').checkConnection();
        var icon = Ext.getCmp('btnDetailsSubscribe');
        var store= Ext.getStore('Uuid');
        var uuid = store.getAt(0).get('key');
        var c = Ext.getCmp('companyName').getData();

        var vuelos = Ext.getStore('MisVuelos');

        if (icon.getIconCls() === 'favorites') {
           this.getApplication().getController('Global').subscribe(uuid,c.nVuelo,c.fprogram);
            vuelos.add({'nVuelo' : c.nVuelo,'fprogram': c.fprogram});
            vuelos.sync();
        }
        else
        {
            this.deleteFlight(c.nVuelo,c.fprogram,uuid);
        }


    },

    onSuscripcionesListItemTap: function(dataview, index, target, record, e, eOpts) {
          this.goToDetails(dataview, index, target, record, e, eOpts);
    },

    onTextfieldChange: function(textfield, newValue, oldValue, eOpts) {
        if(Ext.getCmp('vuelosTabPanel').getActiveItem().getId() === 'vuelosPanelArribos'){
            console.log(newValue);
            console.log('arrivals');
                 this.getApplication().getController('Global').getArrivals(newValue);
        }
        else{
                console.log(newValue);
            console.log('departures');
               this.getApplication().getController('Global').getDepartures(newValue);
        }
    },

    onSuscripcionesHomeButtonTap: function(button, e, eOpts) {
        this.showHideMenu("");
    },

    onDetailsRefresh: function(button, e, eOpts) {
        this.getApplication().getController('Global').checkConnection();
        //se actualiza la lista de arribos o partidas dependiendo de lo que sea el vuelo seleccionado
        if(this.globalRecord.data.esArribo){
            this.getApplication().getController('Global').getArrivals('','0');
            var tienda =  Ext.getStore('Arribos');
            Ext.getCmp('lstArribos').refresh();
        }else{
            this.getApplication().getController('Global').getDepartures('','0');
            var tienda =  Ext.getStore('Partidas');
            Ext.getCmp('lstPartidas').refresh();

        }
        //se obtiene el vuelo de la lista actualizada
        for (i = 0; i < tienda.getCount(); i++) {
            if(tienda.getAt(i).data.nVuelo == this.globalRecord.data.nVuelo){
                var index =  i;
            }
        }
        //se actualizan los datos
        Ext.getCmp('companyName').setData(tienda.getAt(index).data);

    },

    btnOffLine: function(button, e, eOpts) {
        if(window.navigator.onLine){
            Ext.getCmp('offLineContainer').hide();
            this.showView('mainView');
            this.btnArribos();
            var cultura = navigator.language;
            this.getApplication().getController('Global').getVersion(cultura);
            this.getApplication().getController('Global').getArrivals('','0');
        }
    },

    createUuid: function() {
                 function s4() {
                    return Math.floor((1 + Math.random()) * 0x10000)
                               .toString(16)
                               .substring(1);
                  }
                  return function() {
                    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
                           s4() + '-' + s4() + s4() + s4();
                  };
    },

    goToDetails: function(dataview, index, target, record, e, eOpts) {

        this.globalRecord = record;


        if (record) {

            // set the info
            Ext.getCmp('companyName').setData(record.data);

            var esMyVuelo =  Ext.getStore('MisVuelos');

            var index = esMyVuelo.find('nVuelo', record.data.nVuelo);


            console.log('------ Lo que encuentra index');
            console.log(record.data.nVuelo +'  --  '+record.data.fprogram);


            Ext.getCmp('btnDetailsSubscribe').setIconCls('favorites');
            if(index >= 0){
                Ext.getCmp('btnDetailsSubscribe').setIconCls('trash');
            }

            this.getApplication().getController('LogicController').hideViewAll();
            Ext.getCmp('FlightDetailsContainer').show();
            this.showHideMenu('left');
            var tienda = Ext.getStore('WeatherStore');

            Ext.getCmp('flightDetalleToolbar').setTitle(Ext.getStore('StringsStore').getAt(0).data.global_vuelos +' '+ record.data.nVuelo);
            if(record.data.esArribo)
            {
                //Tiempo en el lugar de origen  Ext.Viewport.mask({ xtype: 'loadmask' });
                Ext.getCmp('detailsOrigen').setHtml(record.data.origen);
                Ext.getCmp('origen').mask({ xtype: 'loadmask' });
                Ext.getCmp('destino').mask({ xtype: 'loadmask' });
                this.getApplication().getController('Global').getWeather(record.data.origen);
                Ext.getCmp('origen').setData(tienda.getAt(0).data);
                Ext.getCmp('origen').unmask();
                //Tiempo en el lugar de destino (Montevideo)
                Ext.getCmp('detailsDestino').setHtml("Montevideo");
                this.getApplication().getController('Global').getWeather('Montevideo');
                Ext.getCmp('destino').setData(tienda.getAt(0).data);
                Ext.getCmp('destino').unmask();

            }else
            {
                //Tiempo en el lugar de origen (Montevideo)
                Ext.getCmp('detailsOrigen').setHtml("Montevideo");
                this.getApplication().getController('Global').getWeather('Montevideo');
                Ext.getCmp('origen').setData(tienda.getAt(0).data);
                //Tiempo en el lugar de destino
                Ext.getCmp('detailsDestino').setHtml(record.data.destino);
                this.getApplication().getController('Global').getWeather(record.data.destino);
                Ext.getCmp('destino').setData(tienda.getAt(0).data);
            }

        }

    },

    detailsRefresh: function(dataview, index, target, record, e, eOpts) {
        console.log(this.globalRecord);

    },

    getTimeStamp: function() {
        //Return a timestamp with the format "yy-m-d h:MM:ss" ex. 2014-11-17 14:47:1


        // Create a date object with the current time
          var now = new Date();

        // Create an array with the current month, day and time
          var date = [ now.getFullYear(), now.getMonth() + 1, now.getDate() ];

        // Create an array with the current hour, minute and second
          var time = [ now.getHours(), now.getMinutes(), now.getSeconds() ];


        // Return the formatted string
          return date.join("-") + " " + time.join(":") ;
    },

    changeSubscribeIcon: function() {
        var c = Ext.getCmp('btnDetailsSubscribe');

        if (c.getIconCls() === 'favorites') {
        c.setIconCls('trash');
        }
        else
        {
        c.setIconCls('favorites');
        }
    },

    showHideMenu: function(referrer) {
        if(Ext.Viewport.getMenus().left.isHidden()){
            if(referrer === "" || referrer == "right"){
                Ext.Viewport.showMenu('left');
            }else{
                if(!Ext.getCmp('HomeContainer').isHidden() && Ext.getStore('UsuarioStore').getCount() > 0){
                    this.beforeSubscriptions();
                    Ext.Viewport.showMenu('right');
                }
            }
        }
        else
        {
            if(referrer === "" || referrer == "left")
                Ext.Viewport.hideMenu('left');
        }
    },

    showView: function(view) {
        this.hideViewAll();
        Ext.getCmp(view).show();
    },

    hideViewAll: function() {

        Ext.getCmp('userContainer').hide();
        Ext.getCmp('TaxiContainer').hide();
        Ext.getCmp('ServiciosContainer').hide();
        Ext.getCmp('NormasContainer').hide();

        Ext.getCmp('EstacionamientoContainer').hide();
        Ext.getCmp('LavadoContainer').hide();
        Ext.getCmp('ContactoContainer').hide();

        Ext.getCmp('HomeContainer').hide();
        Ext.getCmp('VuelosContainer').hide();
        Ext.getCmp('SuscripcionesContainer').hide();
        Ext.getCmp('FlightDetailsContainer').hide();
        Ext.getCmp('ServiciosDetailsContainer').hide();

    },

    showOffLine: function() {
         /*

        var panel = Ext.create('Aeropuerto.view.offLineContainer');
        Ext.Viewport.add(panel);
        panel.show();
        */

        ///Ext.create('offLineContainer');
        this.hideViewAll();
        Ext.getCmp('offLineContainer').show();
    },

    deleteFlight: function(nVuelo, fprogram, uuid) {

        var vuelos = Ext.getStore('MisVuelos');
        var susc = Ext.getStore('Suscripciones');
        var list = Ext.getCmp('lstSubscriptions');
        var index, index2;

        this.getApplication().getController('Global').unSubscribe(uuid,nVuelo,fprogram);

            for (i = 0; i < vuelos.getCount(); i++) {
                 if(vuelos.getAt(i).data.nVuelo == nVuelo && vuelos.getAt(i).data.fprogram == fprogram){
                        index =  i;
                 }
            }
                for (i = 0; i < susc.getCount(); i++) {
                  if(susc.getAt(i).data.nVuelo == nVuelo && susc.getAt(i).data.fprogram == fprogram){
                        index2 =  i;
                 }
            }

            vuelos.removeAt(index);
            vuelos.sync();
            susc.removeAt(index2);
            susc.sync();

            list.refresh();

    },

    validateEmail: function(email) {
            var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(email);

    },

    beforeSubscriptions: function() {
        if(Ext.getStore('MisVuelos').getCount()<1){
            Ext.getCmp('suscriptionNoSubs').show();
            Ext.getCmp('lstSubscriptions').hide();
            Ext.getCmp('suscriptionNoSubs2').show();
            Ext.getCmp('lstSubscriptions2').hide();
        }else{
            this.getApplication().getController('Global').getSubscriptions('SuscripcionesContainer',1);
            Ext.getCmp('suscriptionNoSubs').hide();
            Ext.getCmp('lstSubscriptions').show();
            Ext.getCmp('suscriptionNoSubs2').hide();
            Ext.getCmp('lstSubscriptions2').show();
        }
    }

});